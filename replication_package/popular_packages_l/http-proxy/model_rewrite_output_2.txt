The provided Node.js code sets up a proxy server using the `http-proxy` module. Here's a breakdown of its functionality:

1. **Dependencies**: It requires the `http` module for creating HTTP servers and `http-proxy` for setting up the proxy server.

2. **Proxy Configuration**: It creates a proxy server with options to:
   - Forward requests to `http://localhost:9000`.
   - Enable WebSocket proxying (`ws: true`).
   - Change the origin of the host header to match the target URL (`changeOrigin: true`).
   - Include x-forward headers (`xfwd: true`).

3. **Error Handling**: Listens for `error` events on the proxy and responds with a 500 status code and an error message if an error occurs during the proxy process.

4. **Request Modification**: Listens for the `proxyReq` event to modify outgoing requests by adding a special header (`X-Special-Proxy-Header`).

5. **Proxy Server**: Sets up an HTTP server on port 8000 that proxies incoming requests to the target server on port 9000. Also listens for `upgrade` events to handle WebSocket upgrades.

6. **Target Server**: Creates a basic HTTP server on port 9000 that responds with a success message and the headers of the request, simulating a simple service behind the proxy.

Here is a rewritten version of the code:

```javascript
const http = require('http');
const httpProxy = require('http-proxy');

// Create and configure the proxy server
const proxy = httpProxy.createProxyServer({
  target: 'http://localhost:9000',
  ws: true,
  changeOrigin: true,
  xfwd: true
});

// Error handling for proxy server
proxy.on('error', (err, req, res) => {
  console.error('Proxy encountered an error:', err);
  res.writeHead(500, { 'Content-Type': 'text/plain' });
  res.end('Something went wrong. Proxy error.');
});

// Add custom header to proxy requests
proxy.on('proxyReq', (proxyReq, req, res, options) => {
  proxyReq.setHeader('X-Special-Proxy-Header', 'foobar');
});

// Create a proxying HTTP server
const server = http.createServer((req, res) => {
  proxy.web(req, res, { target: 'http://localhost:9000' });
});

// Handle WebSocket upgrades
server.on('upgrade', (req, socket, head) => {
  proxy.ws(req, socket, head);
});

// Start proxy server on port 8000
server.listen(8000, () => {
  console.log('Proxy server is listening on http://localhost:8000');
});

// Target server that the proxy server forwards to
http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.write('Request successfully proxied!\n' + JSON.stringify(req.headers, true, 2));
  res.end();
}).listen(9000, () => {
  console.log('Target server is listening on http://localhost:9000');
});
```