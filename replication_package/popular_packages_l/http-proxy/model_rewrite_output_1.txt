The Node.js code implements an HTTP proxy server that forwards requests to a target server, also capable of handling WebSocket connections. Here's a breakdown of the functionality:

1. **Dependencies**: It requires `http` for creating servers and `http-proxy` for handling the proxy functionality.

2. **Proxy Server Setup**: 
    - A proxy server is created to forward requests to a target server at `http://localhost:9000`.
    - It handles WebSocket upgrades and modifies the request's 'Origin' header to match the target, along with adding `X-Forwarded` headers.

3. **Error Handling**: 
    - Listens for errors in proxying and reports them via the console log and an HTTP 500 response.

4. **Request Modification**:
    - Attaches a special header `X-Special-Proxy-Header` to proxy requests.

5. **Proxy Server**:
    - It listens on port 8000 and forwards incoming HTTP requests and WebSocket upgrades to the target server.

6. **Target Server**:
    - A basic server running on port 9000. It returns a simple text response with JSON stringified request headers, confirming successful proxying.

Here's the rewritten code:

```javascript
const http = require('http');
const httpProxy = require('http-proxy');

// Create a proxy server with options to forward requests to the target
const proxy = httpProxy.createProxyServer({
  target: 'http://localhost:9000',
  ws: true,
  changeOrigin: true,
  xfwd: true
});

// Handle any proxy errors
proxy.on('error', (err, req, res) => {
  console.error('Proxy encountered an error:', err);
  res.writeHead(500, { 'Content-Type': 'text/plain' });
  res.end('Something went wrong. Proxy error.');
});

// Modify proxy request to include custom header
proxy.on('proxyReq', (proxyReq) => {
  proxyReq.setHeader('X-Special-Proxy-Header', 'foobar');
});

// Create HTTP server to proxy requests
const server = http.createServer((req, res) => {
  proxy.web(req, res, { target: 'http://localhost:9000' });
});

// Handle WebSocket upgrade requests
server.on('upgrade', (req, socket, head) => {
  proxy.ws(req, socket, head);
});

// Start the proxy server on port 8000
server.listen(8000, () => {
  console.log('Proxy server is listening on http://localhost:8000');
});

// Setup the target server to handle proxied requests
http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.write('Request successfully proxied!\n' + JSON.stringify(req.headers, true, 2));
  res.end();
}).listen(9000, () => {
  console.log('Target server is listening on http://localhost:9000');
});
```