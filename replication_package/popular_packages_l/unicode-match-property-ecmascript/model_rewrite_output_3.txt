The Node.js code provides a package named `unicode-match-property-ecmascript` that includes a function to match a given Unicode property or alias to its canonical property name, following ECMAScript RegExp Unicode property escapes. The package consists of a `package.json`, `index.js` for the main functionality, and `test.js` for testing.

- **package.json**: Defines metadata, a testing script, and dependencies for the package.
- **index.js**: Implements `matchProperty` function that takes a `value` and verifies if it's a recognized Unicode property or alias, returning the canonical name if found. If the property is unrecognized, an error is thrown.
- **test.js**: Tests the `matchProperty` function with valid and invalid inputs, logging results or error messages to the console.

```json
// package.json
{
  "name": "unicode-match-property-ecmascript",
  "version": "0.1.0",
  "description": "Matches a given Unicode property or property alias to its canonical property name, using strict matching per ECMAScript RegExp Unicode property escapes.",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathiasbynens/unicode-match-property-ecmascript.git"
  },
  "author": "Mathias Bynens",
  "license": "MIT"
}

// index.js
const unicodePropertyAliasesEcmascript = {
    Script: 'sc',
    // other canonical properties and their aliases can be added here
};

function matchProperty(value) {
    value = value.charAt(0).toUpperCase() + value.slice(1);
    for (const [canonical, alias] of Object.entries(unicodePropertyAliasesEcmascript)) {
        if (value === canonical || value === alias) {
            return canonical;
        }
    }
    throw new Error('Invalid Unicode property or property alias: ' + value);
}

module.exports = matchProperty;

// test.js
const matchProperty = require('./index.js');

try {
    console.log(matchProperty('sc')); // 'Script'
    console.log(matchProperty('Script')); // 'Script'
    console.log(matchProperty('script')); // Error
} catch (error) {
    console.error(error.message);
}
```