The `unicode-match-property-ecmascript` package is designed to match a given Unicode property or its alias to the canonical property name without using loose matching. Instead, it applies strict matching according to the algorithm used for RegExp Unicode property escapes in ECMAScript.

### Key Features:
- **Installation & Usage**: The package can be installed via npm and used by requiring the `matchProperty` function within your Node.js application.
  
- **API**: It exports a single function named `matchProperty`, which takes a single argument â€“ a Unicode property or property alias string. The function checks if the provided value corresponds to a canonical Unicode property name. If a match is found, it returns the canonical property name; otherwise, it throws an exception.

### Example Usage:
- `matchProperty('sc')` returns `'Script'`.
- `matchProperty('Script')` returns `'Script'`.
- `matchProperty('script')` throws an error due to incorrect casing since the match is supposed to be strict.

The package highlights the importance of casing and precise matching as opposed to using flexible or loose matching rules that might ignore such distinctions.

Here's the implementation for the `unicode-match-property-ecmascript` package:

```markdown
// package.json
{
  "name": "unicode-match-property-ecmascript",
  "version": "0.1.0",
  "description": "Matches a given Unicode property or property alias to its canonical property name, using strict matching per ECMAScript RegExp Unicode property escapes.",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathiasbynens/unicode-match-property-ecmascript.git"
  },
  "author": "Mathias Bynens",
  "license": "MIT"
}

// index.js
const unicodePropertyAliasesEcmascript = {
    Script: 'sc',
    // other canonical properties and their aliases
};

function matchProperty(value) {
    for (const [canonical, alias] of Object.entries(unicodePropertyAliasesEcmascript)) {
        if (value === canonical || value === alias) {
            return canonical;
        }
    }
    throw new Error('Invalid Unicode property or property alias: ' + value);
}

module.exports = matchProperty;

// test.js
const matchProperty = require('./index.js');

try {
    console.log(matchProperty('sc')); // 'Script'
    console.log(matchProperty('Script')); // 'Script'
    console.log(matchProperty('script')); // Error
} catch (error) {
    console.error(error.message);
}
```

This code defines a basic implementation of the required functionality. The `unicodePropertyAliasesEcmascript` object needs to be populated with all the necessary Unicode canonical properties and their potential aliases as defined in the ECMAScript specification. The `matchProperty` function iterates through these mappings to determine if an alias or property matches the input `value`, returning the canonical property name if successful, or throwing an error if unsuccessful.