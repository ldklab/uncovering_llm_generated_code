The `merge-descriptors` package is a utility for merging properties from one object (source) into another (destination) using property descriptors. A property descriptor provides information about a property, such as its value, enumerable status, configurable status, and any getter or setter properties it might have. This utility ensures that both regular and special properties like non-enumerable and accessor properties are copied with their complete descriptors, not just their values.

### Key Features:
- **Merge Properties**: Transfers properties from a source object to a destination object using descriptors.
- **Non-Enumerable and Accessor Properties**: Includes properties that are not enumerable and those defined with getters or setters.
- **Overwrite Control**: Allows specifying whether existing properties on the destination should be overwritten by those from the source.

### API:
- **merge(destination, source, overwrite?)**:
  - **destination**: The object receiving properties from the source.
  - **source**: The object providing properties to be merged.
  - **overwrite**: Determines if properties on the destination should be overwritten (`true` by default).

Here is the implementation of the `merge-descriptors` package:

```js
// merge-descriptors.js

function mergeDescriptors(destination, source, overwrite = true) {
  if (!source || typeof source !== 'object') {
    throw new TypeError('Source must be a non-null object');
  }
  if (!destination || typeof destination !== 'object') {
    throw new TypeError('Destination must be a non-null object');
  }

  const keys = Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source));

  keys.forEach((key) => {
    if (!overwrite && key in destination) {
      return;
    }
    const descriptor = Object.getOwnPropertyDescriptor(source, key);
    Object.defineProperty(destination, key, descriptor);
  });

  return destination;
}

export default mergeDescriptors;
```

### Sample Usage:

This package lets you import the function and use it to merge properties from one object to another while handling complex property types including getters and setters directly through descriptors.

```js
import mergeDescriptors from './merge-descriptors.js';

const person = {
  get name() {
    return 'Alice';
  }
};

const animal = {};

mergeDescriptors(animal, person);

console.log(animal.name);  // Outputs: 'Alice'
```

To install this utility in a project and execute the above code, ensure you first run `npm install` with the appropriate reusable script formatting.