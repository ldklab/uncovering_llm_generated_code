The `create-require` package provides a polyfill for Node.js's `module.createRequire` function, which is available in Node.js versions 12.2.0 and above. This polyfill allows developers to create a `require` function that behaves as if it was called from the module at a specified path or URL, even on Node.js versions that do not natively support `module.createRequire`.

### Functional Breakdown:
- **Install**: The package can be installed via npm or yarn.
- **Polyfills `createRequire`**: For Node.js versions <= 12.2.0, it provides the `createRequire` function.
- **Usage**:
  - `createRequire(filename: string | URL): NodeRequire`: The `createRequire` function takes a `filename` (either a string or a URL) and returns a `require` function. This `require` behaves as if it was called from the module at the given `filename`.
  - This custom `require` function can be used to load modules relative to the specified path.

```javascript
// create-require/index.js
const path = require('path');
const Module = require('module');

function createRequire(filename) {
  if (typeof filename === 'string') {
    filename = path.resolve(filename);
  } else if (filename instanceof URL) {
    filename = path.fileURLToPath(filename);
  } else {
    throw new TypeError('filename must be a string or a URL');
  }

  const mod = new Module(filename);
  mod.filename = filename;
  mod.paths = Module._nodeModulePaths(path.dirname(filename));
  
  function requireWrapper(request) {
    return mod.require(request);
  }
  
  requireWrapper.resolve = function(request) {
    return Module._resolveFilename(request, mod);
  };

  requireWrapper.main = require.main;
  requireWrapper.extensions = Module._extensions;
  requireWrapper.cache = Module._cache;
  
  return requireWrapper;
}

module.exports = createRequire;
```

This code defines a `createRequire` function that:
- Takes a module `filename` or `URL` and normalizes it to an absolute file path.
- Creates an instance of Node.js's `Module` using this file path.
- Configures this module instance with the correct `filename` and `paths` for module resolution.
- Returns a custom require function (`requireWrapper`) that can resolve and load modules relative to the specified module.

The `requireWrapper` mirrors the Node.js `require` object by providing `.resolve`, `.main`, `.extensions`, and `.cache` properties from the original Node.js `require`.