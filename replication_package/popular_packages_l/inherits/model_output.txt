The package described provides a way to implement JavaScript inheritance compatible with both Node.js environments and browser environments. The core functionality relies on the `inherits` method from Node.js's `util` module, which facilitates the prototypical inheritance mechanism by setting up the prototype chain between two constructor functions. 

For Node.js environments, the package exports the standard `inherits` method directly from the `util` module. For browser environments, where the entire `util` module isn't necessary (and could lead to large bundles), the package provides a standalone implementation of `inherits`. This standalone version mimics the functionality of the Node.js implementation, but is engineered to avoid importing the entire `util` module, minimizing overhead.

Additionally, the browser implementation includes a shim for environments that lack support for `Object.create`, ensuring that the package can be used even in older browsers. The overall goal is to ensure that the implementation is lightweight and suitable for both server-side and client-side code environments without requiring extra dependencies.

Here's the implementation of such a package:

```markdown
// package.json
{
  "name": "inherits",
  "version": "2.0.0",
  "main": "inherits.js",
  "browser": "inherits_browser.js"
}

// inherits.js (Node.js implementation)
var util = require('util');

module.exports = util.inherits;

// inherits_browser.js (Browser implementation with old browser shim)
module.exports = function inherits(ctor, superCtor) {
  if (superCtor) {
    ctor.super_ = superCtor;
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  }
};
```

In this setup, the `inherits.js` file simply re-exports the `inherits` function from Node.js's `util` module. For browser environments, `inherits_browser.js` provides a custom implementation that includes a shim for older browsers by directly utilizing `Object.create` and correctly setting prototype properties according to ECMAScript standards. The `package.json` file specifies a different entry point for browser environments ("inherits_browser.js") via the "browser" field to ensure appropriate code is bundled for the target environment.