The provided Node.js code defines a module that extends the native `fs` module's functionalities by using `graceful-fs` for more resilient file system operations, and includes additional utility functions like copying files, ensuring directories are present, removing directories or files, and writing data to files. This module uses both synchronous and asynchronous methods and wraps many fs functions in promises for easier use with async/await. Key functions include:

- `copy`: Asynchronously copies a file.
- `copySync`: Synchronously copies a file.
- `ensureDir`: Asynchronously ensures a directory exists, creating it if necessary.
- `ensureDirSync`: Synchronously ensures a directory exists.
- `remove`: Asynchronously removes a file or directory.
- `removeSync`: Synchronously removes a file or directory.
- `outputFile`: Asynchronously writes data to a file, ensuring the directory exists.
- `outputFileSync`: Synchronously writes data to a file, ensuring the directory exists.
- `pathExists`: Asynchronously checks if a path exists.

Here's the rewritten code:

```javascript
// fs-extra.js
const fs = require('fs');
const path = require('path');
const { promisify } = require('util');
const gracefulFs = require('graceful-fs');

gracefulFs.gracefulify(fs);

const copy = promisify(fs.copyFile);
const access = promisify(fs.access);

const pathExists = async (p) => {
  try {
    await access(p);
    return true;
  } catch {
    return false;
  }
};

const copySync = (src, dest) => {
  fs.copyFileSync(src, dest);
};

const ensureDir = async (dirPath) => {
  await fs.promises.mkdir(dirPath, { recursive: true });
};

const ensureDirSync = (dirPath) => {
  fs.mkdirSync(dirPath, { recursive: true });
};

const remove = async (dirPath) => {
  await fs.promises.rm(dirPath, { recursive: true, force: true });
};

const removeSync = (dirPath) => {
  fs.rmSync(dirPath, { recursive: true, force: true });
};

const outputFile = async (filePath, data) => {
  await ensureDir(path.dirname(filePath));
  await fs.promises.writeFile(filePath, data);
};

const outputFileSync = (filePath, data) => {
  ensureDirSync(path.dirname(filePath));
  fs.writeFileSync(filePath, data);
};

// Expose promisified fs methods
module.exports = {
  ...fs.promises,
  copy,
  copySync,
  ensureDir,
  ensureDirSync,
  remove,
  removeSync,
  outputFile,
  outputFileSync,
  pathExists,
};
```