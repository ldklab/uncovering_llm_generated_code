```javascript
// Import necessary modules
const fs = require('fs');
const path = require('path');

class SassCompiler {
  compileSync(scssFilePath) {
    // Synchronously read SCSS file and transform its content to CSS
    const fileContent = fs.readFileSync(scssFilePath, 'utf-8');
    return this._scssToCssTransform(fileContent);
  }

  async compileAsync(scssFilePath) {
    // Asynchronously read SCSS file and transform its content to CSS
    const fileContent = await fs.promises.readFile(scssFilePath, 'utf-8');
    return this._scssToCssTransform(fileContent);
  }

  _scssToCssTransform(scssContent) {
    // Mock transformation mimicking SCSS to CSS conversion
    const transformedCss = scssContent.replace(/;/g, ';\n').replace(/\{ /g, '{\n  ');
    return { css: transformedCss };
  }
}

// Export a singleton instance of SassCompiler
const sassCompiler = new SassCompiler();
module.exports = sassCompiler;

// Command Line Interface handling
if (require.main === module) {
  const filePath = process.argv[2];

  if (!filePath) {
    console.error('Please provide a path to the SCSS file.');
    process.exit(1);
  }

  try {
    const output = sassCompiler.compileSync(filePath);
    console.log('Generated CSS:', output.css);
  } catch (err) {
    console.error('An error occurred while processing the SCSS file:', err.message);
    process.exit(1);
  }
}
```