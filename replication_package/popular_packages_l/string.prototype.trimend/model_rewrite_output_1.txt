The provided Node.js code defines a `trimEnd` function that removes trailing whitespace characters from a given string. The code includes a set of whitespace characters and constructs a regular expression (`wsRegexEnd`) to identify these characters at the end of a string. The function is added as a polyfill to `String.prototype` if `trimEnd` doesn't already exist.

Here's a step-by-step explanation of the code:

1. **Whitespace Definition**: A string `whitespace` includes various characters recognized as whitespace, which the function will look to remove from the end of strings.

2. **Regular Expression**: `wsRegexEnd` is a regular expression that matches one or more of these whitespace characters at the end (`+$`) of a string.

3. **`trimEnd` Function**: 
   - This function accepts a `value`, which is likely intended to be a string.
   - It checks if `value` is `undefined` or `null`, throwing a `TypeError` if it is.
   - It converts the `value` to a string and uses `String.prototype.replace` to remove any matched trailing whitespace using `wsRegexEnd`.
   
4. **Polyfill Shim**:
   - A `shimTrimEnd` function checks if `String.prototype.trimEnd` exists.
   - If it doesn't, it assigns the defined `trimEnd` function to `String.prototype.trimEnd`, effectively adding `trimEnd` as a method.
   
5. **Module Exports**:
   - The module exports the `trimEnd` function directly.
   - It also exports the `shim` function as `shim`, allowing users to polyfill `trimEnd` in environments where it may not be available.

Hereâ€™s a rewritten version of the Node.js code:

```javascript
// string.prototype.trimend/index.js

'use strict';

var toStr = Object.prototype.toString;
var replace = String.prototype.replace;
var whitespace = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\uFEFF';
var wsRegexEnd = new RegExp('[' + whitespace + ']+$');

function trimEnd(value) {
    if (value == null) {
        throw new TypeError('Cannot convert undefined or null to object');
    }
    return replace.call(String(value), wsRegexEnd, '');
}

function shim() {
    if (typeof String.prototype.trimEnd !== 'function') {
        String.prototype.trimEnd = function () {
            return trimEnd(this);
        };
    }
}

module.exports = trimEnd;
module.exports.shim = shim;
```