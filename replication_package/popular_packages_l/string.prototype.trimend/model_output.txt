The functionality described in the README.md for the Node.js package `string.prototype.trimend` is a shim for the `String.prototype.trimEnd` method. This package provides a solution to ensure that the `trimEnd` method is available in environments where it might not natively exist. 

`String.prototype.trimEnd` is a method that removes whitespace from the end of a string. It is part of the ECMAScript 2019 specification, so older JavaScript environments might not support it.

The package exports a function that performs the same operation as `String.prototype.trimEnd` and also includes a `.shim()` method. When `.shim()` is invoked, it will define `String.prototype.trimEnd` in a given environment if it does not already exist.

The README provides an example of how to use the shim function directly and how to apply the shim to the `String.prototype.trimEnd`.

To implement this functionality, we need:

1. A function that trims the trailing whitespace from a string.
2. A shim method that extends `String.prototype` if `trimEnd` is not already defined.

Here is the code for the Node.js package:

```js
// string.prototype.trimend/index.js

'use strict';

var toStr = Object.prototype.toString;
var replace = String.prototype.replace;
var whitespace = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\uFEFF';
var wsRegexEnd = new RegExp('[' + whitespace + ']+$');

var trimEnd = function trimEnd(value) {
    if (typeof value === 'undefined' || value === null) {
        throw new TypeError('Cannot convert undefined or null to object');
    }
    return replace.call(String(value), wsRegexEnd, '');
};

var shim = function shimTrimEnd() {
    if (!String.prototype.trimEnd) {
        String.prototype.trimEnd = function () {
            return trimEnd(this);
        };
    }
};

module.exports = trimEnd;
module.exports.shim = shim;
```

This code creates a standalone method that removes trailing whitespace and adds a shim to inject this method into `String.prototype` if it is not already present. The `whitespace` variable encompasses all the whitespace characters that should be trimmed, following the ECMAScript specification.