The `emoji-regex` package provides a regular expression to match emoji symbols and sequences according to the Unicode Standard. Its primary feature is to recognize and correctly handle a wide range of emoji, including those with modifiers and various presentation styles. The package ensures that the regular expression remains up-to-date with the latest Unicode standards by leveraging the `emoji-test-regex-pattern` to generate its patterns at build time.

### Functionality:
- **Installation and Usage**: The package can be installed via npm and used in Node.js applications. It provides a function that returns a regex pattern, which can then be used to match emoji in strings.
- **Immutable Regex**: The regex is exported via a function to avoid unintended mutation. This is because the global flag is set on the regex, which could lead to state issues if not handled properly.
- **Example Code**: The README includes an example that demonstrates how to use the returned regex to match emoji in a given text, printing out each match and its associated code points.
- **Updating**: Maintainers have instructions to update the package when new Unicode releases occur, involving updating dependencies and regenerating the regex patterns.
- **Release Process**: For releasing a new version, maintainers bump the version number and push the changes, with the CI system handling the publication to npm.
- **Authorship and License**: The package is authored by Mathias Bynens and available under the MIT license.

Here‚Äôs a simplified implementation of the `emoji-regex` package in Node.js:

```javascript
// emoji-regex/index.js

const emojiPattern = require('emoji-test-regex-pattern'); // Hypothetical module

// Function to generate regex pattern
function createEmojiRegex() {
  // Generate the regex pattern using the `emoji-test-regex-pattern` module
  const pattern = emojiPattern(); // Hypothetical function call
  return new RegExp(pattern, 'gu');
}

module.exports = createEmojiRegex;
```

```json
// emoji-regex/package.json
{
  "name": "emoji-regex",
  "version": "1.0.0",
  "description": "Regular expression for matching emoji symbols and sequences according to Unicode.",
  "main": "index.js",
  "scripts": {
    "test": "node test.js",
    "build": "node build.js"
  },
  "dependencies": {
    "emoji-test-regex-pattern": "^1.0.0" // Hypothetical dependency
  },
  "devDependencies": {
    "@unicode/unicode-15.0.0": "^1.0.0" // Latest hypothetical Unicode data
  },
  "author": "Mathias Bynens",
  "license": "MIT"
}
```

```javascript
// emoji-regex/test.js

const createEmojiRegex = require('./index');

const text = `
\u{231A}: ‚åö default emoji presentation character (Emoji_Presentation)
\u{2194}\u{FE0F}: ‚ÜîÔ∏è default text presentation character rendered as emoji
\u{1F469}: üë© emoji modifier base (Emoji_Modifier_Base)
\u{1F469}\u{1F3FF}: üë©üèø emoji modifier base followed by a modifier
`;

const regex = createEmojiRegex();
for (const match of text.matchAll(regex)) {
  const emoji = match[0];
  console.log(`Matched sequence ${ emoji } ‚Äî code points: ${ [...emoji].length }`);
}
```

```javascript
// emoji-regex/build.js

const fs = require('fs');
const emojiPattern = require('emoji-test-regex-pattern');

function build() {
  // Simulating a build step that creates a regex pattern
  const pattern = emojiPattern(); // Hypothetical pattern generation
  const output = `module.exports = ${JSON.stringify(pattern)};`;
  fs.writeFileSync('./regex-pattern.js', output);
}

build();
```

This code block provides a simple structure for the `emoji-regex` package, focusing on generating and exposing a regex pattern to match emoji, as discussed in the README.