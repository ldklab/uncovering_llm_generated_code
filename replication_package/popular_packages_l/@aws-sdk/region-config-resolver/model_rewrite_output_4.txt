```json
// package.json
{
  "name": "@aws-sdk/region-config-manager",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT"
}
```

```javascript
// index.js
module.exports = {
  getRegionFromEnv,
  checkRegionValidity,
  constructRegionEndpoint,
  getSupportedRegions
};

const supportedRegions = [
  'us-east-1', 'us-west-2', 'eu-west-1', // ... additional regions
];

function getRegionFromEnv() {
  // Fetches the AWS region from environment variables
  return process.env.AWS_REGION || process.env.AWS_DEFAULT_REGION || null;
}

function checkRegionValidity(region) {
  // Checks if the specified region is within the supported AWS regions
  if (!region || !supportedRegions.includes(region)) {
    throw new Error(`Invalid AWS region: ${region}`);
  }
  return true;
}

function constructRegionEndpoint(region) {
  // Constructs the endpoint URL based on the given region
  if (!region) {
    throw new Error("Region is required to construct endpoint.");
  }
  // Simplified example of end-point creation
  return `https://service.${region}.amazonaws.com`;
}

function getSupportedRegions() {
  // Provides a list of supported regions
  return supportedRegions;
}

// Example usage (not part of the module export)
try {
  const region = getRegionFromEnv();
  checkRegionValidity(region);
  console.log(`Region in use: ${region}`);
  console.log(`Computed Endpoint: ${constructRegionEndpoint(region)}`);
  console.log(`Supported regions: ${getSupportedRegions().join(', ')}`);
} catch (error) {
  console.error(error.message);
}
```
