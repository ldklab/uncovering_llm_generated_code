```json
// package.json
{
  "name": "@aws-sdk/region-config-resolver",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT"
}
```

```js
// index.js
const availableRegions = [
  'us-east-1', 'us-west-2', 'eu-west-1', // ... other regions
];

function resolveRegionFromEnv() {
  return process.env.AWS_REGION || process.env.AWS_DEFAULT_REGION || null;
}

function validateRegion(region) {
  if (!region || !availableRegions.includes(region)) {
    throw new Error(`Invalid AWS region: ${region}`);
  }
  return true;
}

function getRegionEndpoint(region) {
  if (!region) {
    throw new Error("Region is required to get endpoint.");
  }
  return `https://service.${region}.amazonaws.com`;
}

function listAvailableRegions() {
  return availableRegions;
}

module.exports = {
  resolveRegionFromEnv,
  validateRegion,
  getRegionEndpoint,
  listAvailableRegions
};

// Example usage
try {
  const region = resolveRegionFromEnv();
  validateRegion(region);
  console.log(`Using region: ${region}`);
  console.log(`Endpoint: ${getRegionEndpoint(region)}`);
  console.log(`Available regions: ${listAvailableRegions().join(', ')}`);
} catch (error) {
  console.error(error.message);
}
```

Explanation:

The provided Node.js code defines a module for resolving AWS region configurations. It consists of four primary functions and an example of usage:

1. **resolveRegionFromEnv:** This function retrieves an AWS region from environment variables (`AWS_REGION` or `AWS_DEFAULT_REGION`). It returns `null` if neither is set.

2. **validateRegion:** This function checks if a given region is in the list of supported AWS regions. If the region is invalid, an error is thrown.

3. **getRegionEndpoint:** This function generates and returns a URL for a service endpoint within a specified region. It throws an error if no region is specified.

4. **listAvailableRegions:** This function returns the available AWS regions that this module supports.

The module is exported using `module.exports` for use in other parts of an application. Additionally, there is an example usage that demonstrates how to use these functions to get and validate the region, print the endpoint, and list available regions.