The functionality described in the `@aws-sdk/util-endpoints` package is minimal, based solely on the README.md provided. This package appears to be an internal component of the AWS SDK for JavaScript, as suggested by its description: "An internal package". The presence of version and download badges from npm suggests it is published and available on npm, but the package itself does not provide detailed functionality or usage instructions in the README provided.

Given this information, we can infer that the package might serve as a utility for managing or resolving endpoints when interacting with AWS services, which is a common utility in SDKs. However, without further documentation or details, the exact nature of these utilities is unclear, and we need to implement a basic structure that mimics the existence of such a package.

Here is a simple implementation of what such a utility package might look like, focusing on providing some basic functionality related to managing or resolving endpoints:

```javascript
// util-endpoints/index.js

class EndpointResolver {
  constructor() {
    // This could be extended with configurations or service endpoint mappings
    this.defaultEndpoint = 'https://default.service.endpoint';
  }

  /**
   * Resolves the endpoint for the given service.
   * @param {string} serviceName - The name of the AWS service.
   * @returns {string} - The endpoint URL for the specified service.
   */
  resolve(serviceName) {
    // A simple mock example resolving logic
    const endpointMappings = {
      's3': 'https://s3.amazonaws.com',
      'dynamo': 'https://dynamodb.amazonaws.com',
    };

    return endpointMappings[serviceName] || this.defaultEndpoint;
  }
}

module.exports = {
  EndpointResolver,
};
```

In this mock package implementation:

1. **EndpointResolver Class**: This class is designed to provide an endpoint for a requested AWS service. The class could be extended with more detailed configurations in a real-world scenario.

2. **resolve Method**: This method takes a `serviceName` as an argument and returns a corresponding endpoint URL. If no match is found in the predefined endpoints map, it returns a default endpoint as a fallback.

This foundational code establishes a structure you could build upon if you had more specific endpoint utility requirements for AWS services.