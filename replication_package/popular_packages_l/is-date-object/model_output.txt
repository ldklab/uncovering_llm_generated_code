The `is-date-object` package checks if a given value is a JavaScript Date object. It provides functionality to accurately identify Date objects across different JavaScript environments, such as multiple iframes or realms, and is not affected by the `@@toStringTag` property introduced in ES6, which can sometimes deceive the regular `Object.prototype.toString` method.

### Example Usage
- The function `isDate` is used to determine if a given value is a date.
- It returns `false` for typical non-date objects: `undefined`, `null`, booleans, numbers, strings, functions, arrays, objects, and regular expressions.
- It returns `true` only if the input value is an instance of a Date object created using `new Date()`.

### Testing
The package provides a test suite that checks the function against various inputs to ensure its correct functionality.

Here is the implementation of the `is-date-object` package including its test file.

```markdown
// lib/is-date-object.js
function isDateObject(value) {
  return Object.prototype.toString.call(value) === '[object Date]';
}

module.exports = isDateObject;

// test/index.js
var assert = require('assert');
var isDate = require('../lib/is-date-object');

assert.notOk(isDate(undefined), 'undefined is not a Date');
assert.notOk(isDate(null), 'null is not a Date');
assert.notOk(isDate(false), 'false is not a Date');
assert.notOk(isDate(true), 'true is not a Date');
assert.notOk(isDate(42), '42 is not a Date');
assert.notOk(isDate('foo'), '"foo" is not a Date');
assert.notOk(isDate(function () {}), 'function is not a Date');
assert.notOk(isDate([]), 'array is not a Date');
assert.notOk(isDate({}), 'object is not a Date');
assert.notOk(isDate(/a/g), 'regex literal is not a Date');
assert.notOk(isDate(new RegExp('a', 'g')), 'regex object is not a Date');
assert.ok(isDate(new Date()), 'new Date() is a Date');

console.log('All tests passed');

// package.json
{
  "name": "is-date-object",
  "version": "1.0.0",
  "description": "Is this value a JS Date object?",
  "main": "lib/is-date-object.js",
  "scripts": {
    "test": "node test/index.js"
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "assert": "^1.5.0"
  }
}

// LICENSE
The MIT License (MIT)

// README.md
# is-date-object

Is this value a JS Date object? This module works cross-realm/iframe, and despite ES6 @@toStringTag.

## Example

```js
var isDate = require('is-date-object');
var assert = require('assert');

assert.notOk(isDate(undefined));
assert.notOk(isDate(null));
assert.notOk(isDate(false));
assert.notOk(isDate(true));
assert.notOk(isDate(42));
assert.notOk(isDate('foo'));
assert.notOk(isDate(function () {}));
assert.notOk(isDate([]));
assert.notOk(isDate({}));
assert.notOk(isDate(/a/g));
assert.notOk(isDate(new RegExp('a', 'g')));

assert.ok(isDate(new Date()));
```

## Tests
Simply clone the repo, `npm install`, and run `npm test`
```
