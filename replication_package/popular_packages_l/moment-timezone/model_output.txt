The Moment Timezone library is an extension of the Moment.js library that provides support for time zone conversions using the IANA Time Zone Database. It allows you to convert dates and times across various global time zones and formats them accordingly. The package is legacy software, meaning that while it's still supported, it is not actively developed and users are encouraged to use other modern alternatives.

The example illustrates how you can use the library to convert UTC dates to specific time zones and format them to show the hours (with AM/PM) and the respective time zone abbreviation. For instance, the code snippet shows how a date is converted into times for Los Angeles, New York, Tokyo, and Sydney, both for a date in June and a date in December, accounting for time zone changes such as daylight saving. 

Here's the implementation of the aforementioned functionality using a Node.js package that leverages Moment.js and Moment Timezone:

```markdown
// package.json
{
  "name": "moment-timezone-example",
  "version": "1.0.0",
  "description": "Example usage of Moment Timezone for time zone conversion and formatting",
  "main": "index.js",
  "scripts": {
    "start": "node index.js"
  },
  "dependencies": {
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.34"
  },
  "author": "",
  "license": "MIT"
}

// index.js
const moment = require('moment-timezone');

function formatTimes(dateString) {
  const date = moment(dateString);

  const zones = [
    'America/Los_Angeles',
    'America/New_York',
    'Asia/Tokyo',
    'Australia/Sydney'
  ];

  zones.forEach(zone => {
    console.log(`${zone}: ${date.tz(zone).format('ha z')}`);
  });
}

console.log('Times for June 1, 2014 12:00 UTC');
formatTimes("2014-06-01T12:00:00Z");

console.log('Times for December 1, 2014 12:00 UTC');
formatTimes("2014-12-01T12:00:00Z");
```

To use this package:
1. Ensure you have Node.js and npm installed.
2. Create a new directory and place the above files (`package.json` and `index.js`) inside it.
3. Run `npm install` in the terminal to install the dependencies specified in `package.json`.
4. Execute `npm start` to run the `index.js` script, which will output the converted and formatted times for each specified time zone.