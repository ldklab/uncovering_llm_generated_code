The provided Node.js code is a Webpack configuration file for bundling JavaScript and CSS/SCSS files. Here's a breakdown of its functionalities:

1. **Entry Point**: The entry point for the application is defined as './src/app.js'. This is where Webpack starts building its dependency graph.

2. **Output Configuration**: The output of the bundled files is set to be 'bundle.js' which gets saved into a 'dist' directory.

3. **Module Rules**: 
    - A rule is specified for handling `.scss` or `.sass` files using a series of loaders: 
      - `'style-loader'` is used in development for injecting styles into the DOM.
      - `MiniCssExtractPlugin.loader` extracts CSS into separate files in production.
      - `'css-loader'` interprets `@import` and `url()` like `import/require()` and resolves them.
      - `'sass-loader'` compiles Sass to CSS, using Dart Sass implementation, while source maps are generated for debugging.

4. **Sass Options**: Custom Sass options are specified, such as indentation width and include paths.

5. **Plugins**: 
    - `MiniCssExtractPlugin` is used to extract CSS into separate files, with filenames based on the entry points.

6. **Source Map**: Source maps are enabled for easier debugging of the code in development.

7. **Sample SCSS**: The SCSS file defines a `$body-color` variable and applies it to the body selector. It also imports Bootstrap styles.

8. **Application Entry**: The `app.js` file imports the `style.scss` file to include the styles in the Webpack build.

Here is the rewritten version of this configuration:

```javascript
// webpack.config.js
const path = require('path');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

module.exports = {
  entry: './src/app.js',
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist'),
  },
  module: {
    rules: [
      {
        test: /\.s[ac]ss$/i,
        use: [
          process.env.NODE_ENV !== 'production' ? 'style-loader' : MiniCssExtractPlugin.loader,
          'css-loader',
          {
            loader: 'sass-loader',
            options: {
              implementation: require('sass'),
              sourceMap: true,
              sassOptions: {
                indentWidth: 4,
                includePaths: [path.resolve(__dirname, 'src/styles')],
              },
            },
          },
        ],
      },
    ],
  },
  plugins: [
    new MiniCssExtractPlugin({
      filename: '[name].css',
      chunkFilename: '[id].css',
    }),
  ],
  devtool: 'source-map',
};

// Source SCSS file - style.scss
/*
$body-color: red;

body {
  color: $body-color;
}

@import "bootstrap";
*/

// Application entry point - app.js
import './style.scss';

// Run the webpack build according to the configuration
```