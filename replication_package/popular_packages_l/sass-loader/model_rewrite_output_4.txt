The Node.js code provided is a Webpack configuration file used to bundle JavaScript and SCSS files for a web application. Let's break down its functionality:

- **Entry and Output Configuration**: The file specifies a single entry point (`./src/app.js`) for the application. The output of the bundle process will be `bundle.js` located in the `dist` directory.

- **Module Rules**: It defines a rule to handle SCSS files using a series of loaders:
  - For non-production environments, it uses `style-loader` to inject styles into DOM. For production, it utilizes `MiniCssExtractPlugin.loader` to extract the CSS into separate files.
  - `css-loader` is used to interpret `@import` and `url()` like `import/require()` and will resolve them.
  - `sass-loader` compiles Sass into CSS, with options: uses Dart Sass by default, generates source maps, and specifies additional include paths for Sass.

- **Plugins**: Incorporates `MiniCssExtractPlugin` to extract CSS into separate files instead of injecting them into the DOM.

- **DevTools**: It enables source map generation for debugging purposes, making it easier to trace the source of errors or style issues.

Additionally, there's an example SCSS file that defines a variable and imports Bootstrap and an application entry file that imports this SCSS file, setting up the styles for the web application.

Here's a rewritten version of the code:

```js
// webpack.config.js
const path = require('path');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

module.exports = {
  entry: './src/app.js',
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist'),
  },
  module: {
    rules: [
      {
        test: /\.s[ac]ss$/i,
        use: [
          process.env.NODE_ENV !== 'production' ? 'style-loader' : MiniCssExtractPlugin.loader,
          'css-loader',
          {
            loader: 'sass-loader',
            options: {
              implementation: require('sass'),
              sourceMap: true,
              sassOptions: {
                indentWidth: 4,
                includePaths: [path.resolve(__dirname, 'src/styles')],
              },
            },
          },
        ],
      },
    ],
  },
  plugins: [
    new MiniCssExtractPlugin({
      filename: '[name].css',
      chunkFilename: '[id].css',
    }),
  ],
  devtool: 'source-map',
};

// Source SCSS file - style.scss
/*
$body-color: red;

body {
  color: $body-color;
}

@import "bootstrap";
*/

// Application entry point - app.js
import './style.scss';
```