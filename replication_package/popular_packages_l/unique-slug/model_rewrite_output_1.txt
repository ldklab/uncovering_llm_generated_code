The Node.js code defines a module that exports a function called `uniqueSlug`. This function generates an 8-character hexadecimal string that can be used as a unique identifier or slug. The function behaves differently based on whether an argument is supplied:

1. If a string argument `str` is provided, it uses the SHA-256 hash function to create a hash of the string, then slices the first 8 characters from the hexadecimal representation of that hash.

2. If no argument is provided, the function generates 4 random bytes and converts them to a hexadecimal string, effectively returning an 8-character random slug. The functionality is useful for creating short unique identifiers for both random purposes and deterministic ones based on a given string.

Here's the rewritten version of the Node.js code maintaining similar functionality:

```javascript
// uniqueSlug.js

const crypto = require('crypto');

function uniqueSlug(str) {
    if (str) {
        const hash = crypto.createHash('sha256').update(str).digest('hex');
        return hash.slice(0, 8);
    } else {
        return crypto.randomBytes(4).toString('hex');
    }
}

module.exports = uniqueSlug;

// Example Usage:
// const uniqueSlug = require('./uniqueSlug');
// console.log(uniqueSlug());               // Random 8 character slug
// console.log(uniqueSlug('/etc/passwd'));  // Hash-based 8 character slug
```