The provided Node.js code implements a minimal version of `tslib` helper functions, which are used in TypeScript code after it is compiled into JavaScript. The code features two main functions:

1. `__extends`: This function simulates classical inheritance, mimicking the behavior of `extends` in TypeScript. It extends static properties from the parent class `b` to the child class `d` and sets up a prototype chain, so that instances of `d` will have access to `b`'s prototype methods.

2. `__assign`: This function is used to merge multiple objects into a single object, similar to the `Object.assign` method. If `Object.assign` is not available, it manually copies properties from each source object to the target object.

Both functions are then exported for use in JavaScript files generated by compiling TypeScript code.

Here is a possible rewrite of the code:

```javascript
// tslib.js
// Minimal implementation of tslib helper functions

// __extends helper function to simulate classical inheritance in JavaScript
function __extends(child, parent) {
    // Extending static properties
    for (var key in parent) {
        if (Object.prototype.hasOwnProperty.call(parent, key)) {
            child[key] = parent[key];
        }
    }

    // Constructor function for setting up the prototype chain
    function TempConstructor() { this.constructor = child; }
    TempConstructor.prototype = parent.prototype;
    child.prototype = new TempConstructor();
}

// __assign helper function to merge objects
var __assign = function() {
    __assign = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var property in source) {
                if (Object.prototype.hasOwnProperty.call(source, property)) {
                    target[property] = source[property];
                }
            }
        }
        return target;
    };
    return __assign.apply(this, arguments);
};

// Exporting functions to be used in TypeScript-compiled JavaScript
module.exports = {
    __extends: __extends,
    __assign: __assign
};
```