The provided Node.js code sets up a testing environment for a TypeScript project using Jest. Here's a breakdown of each part:

1. **package.json**: This file defines the project's metadata and dependencies. It specifies that `jest`, `typescript`, and `@types/jest` are development dependencies, allowing Jest to be used as a test runner for TypeScript code.

2. **jest.config.js**: This configuration file tells Jest to use a custom transformer for TypeScript files (`ts-jest-transformer`). This transformer is applied to files with a `.ts` extension. The configuration also sets up a Node environment for testing and specifies the file extensions it should consider (TypeScript and JavaScript).

3. **ts-jest-transformer.js**: This is a simple Jest transformer module for transforming TypeScript files. It uses TypeScript's `transpileModule` function to transpile `.ts` files to CommonJS JavaScript modules, producing source maps as well.

4. **__tests__/sum.test.ts**: This is an example test file written in TypeScript. It contains a function `sum` and a test case that checks if `sum(1, 2)` returns `3`.

Here's a rewritten version of the code as per the explanation:

```json
// package.json
{
  "name": "ts-jest-sample",
  "version": "1.0.0",
  "description": "A simple Jest transformer for TypeScript",
  "main": "index.js",
  "scripts": {
    "test": "jest"
  },
  "devDependencies": {
    "jest": "^27.0.0",
    "typescript": "^4.0.0",
    "@types/jest": "^27.0.0"
  },
  "license": "MIT"
}
```

```js
// jest.config.js
module.exports = {
  transform: {
    '^.+\\.ts?$': 'ts-jest-transformer'
  },
  testEnvironment: 'node',
  moduleFileExtensions: ['ts', 'js'],
};
```

```js
// ts-jest-transformer.js
const ts = require('typescript');

module.exports = {
  process(src, path) {
    if (path.endsWith('.ts')) {
      const transpileOptions = {
        compilerOptions: {
          module: ts.ModuleKind.CommonJS,
          sourceMap: true
        }
      };
      const { outputText, sourceMapText } = ts.transpileModule(src, transpileOptions);
      return outputText;
    }
    return src;
  }
};
```

```ts
// __tests__/sum.test.ts
function sum(a: number, b: number): number {
  return a + b;
}

test('adds 1 + 2 to equal 3', () => {
  expect(sum(1, 2)).toBe(3);
});
```

To run the tests, you can use the command:
```
npx jest
```