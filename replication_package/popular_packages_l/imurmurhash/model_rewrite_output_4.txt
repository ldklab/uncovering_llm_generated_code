The given Node.js code demonstrates the use of the MurmurHash3 hashing algorithm to generate a hash value. Here's a step-by-step explanation of the functionality:

1. **Initialization of Hash State**: 
   - A new hash state is initialized using the MurmurHash3 function with 'initialString' as an input. This string is used to start the hash calculation process.

2. **Hashing Additional Strings**:
   - The `hash('secondString')` method is called on the hashState object to incorporate 'secondString' into the hash computation.
   - The chaining of `hash('thirdString')` further includes 'thirdString' into the ongoing hash calculation. 

3. **Generating the Final Hash Result**:
   - Finally, the `result()` method is called on the hashState object to retrieve the computed hash value after all the input strings have been processed.

Based on this explanation, here is a possible rewritten version of the Node.js code:

```javascript
// Initialize a new hash state with the initial string
let hashState = MurmurHash3('initialString');

// Incorporate additional strings into the hash calculation
hashState.hash('secondString');
hashState.hash('thirdString');

// Retrieve the computed hash value as the final output
let hashOutput = hashState.result();
```