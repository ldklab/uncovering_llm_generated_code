The provided Node.js code is a module for highlighting syntax in code snippets using the `highlight.js` library. The module offers several functions:

1. **highlightAuto(code)**: This function takes in a code snippet as a string and returns the HTML string with syntax highlighting using automatic language detection.

2. **highlight(code, language)**: This function highlights code based on a specified programming language. It takes a code snippet and the language as inputs, then returns the highlighted HTML string.

3. **registerLanguage(langName, langFunc)**: This function allows a user to load a specific language into the `highlight.js` library to minimize the library's footprint. It takes the language name and a language function as inputs.

4. **highlightFileToHtml(inputPath, outputPath, language)**: This function reads code from a file, highlights it (optionally specifying a language), and writes the resulting HTML to another file. It takes an input file path, an output file path, and an optional language specification.

Below is a possible rewrite of the original Node.js code:

```javascript
// my-highlight-package/index.js
const fs = require('fs');
const hljs = require('highlight.js');

function highlightAuto(code) {
  return hljs.highlightAuto(code).value;
}

function highlight(code, language) {
  return hljs.highlight(code, { language }).value;
}

function registerLanguage(langName, langFunc) {
  hljs.registerLanguage(langName, langFunc);
}

function highlightFileToHtml(inputPath, outputPath, language) {
  const code = fs.readFileSync(inputPath, 'utf8');
  const html = language ? highlight(code, language) : highlightAuto(code);
  const htmlContent = `<html><body><pre><code class="hljs">${html}</code></pre></body></html>`;

  fs.writeFileSync(outputPath, htmlContent);
}

module.exports = {
  highlightAuto,
  highlight,
  registerLanguage,
  highlightFileToHtml
};
```
