The `vite` package is a modern frontend build tool designed to enhance the development experience by providing fast and efficient workflows. Here is a summary of its functionality as described in the README:

1. **Development Server with ES Modules**: Vite provides a development server that serves source files using native ES modules, which is a modern JavaScript feature that allows for the efficient loading of JavaScript modules in the browser.

2. **Hot Module Replacement (HMR)**: It includes a feature called HMR that allows developers to see changes in the development environment almost instantly without requiring a full page refresh. This improves the speed of the development iteration cycle.

3. **Optimized Production Builds**: Vite uses Rollup, a popular JavaScript module bundler, to build optimized static assets for production. These builds are pre-configured to ensure high performance.

4. **Plugin API**: Vite is extensible through a universal plugin interface, allowing developers to add or modify functionality easily.

5. **Typed APIs**: Vite provides fully typed APIs, making it easier to work with in TypeScript or any environment where type safety is desired.

Below is a simple Node.js package implementation of the described functionality:

```javascript
// vite/index.js

const express = require('express');
const { build } = require('esbuild');

// Simple Vite-like dev server
function createDevServer() {
  const app = express();

  // Middleware to serve JavaScript as ES modules
  app.get('*.js', (req, res, next) => {
    res.type('application/javascript');
    next();
  });

  // Placeholder for hot module replacement functionality
  app.get('/hmr', (req, res) => {
    // Dummy endpoint for HMR
    res.json({ message: 'HMR endpoint hit!' });
  });

  // Static file server
  app.use(express.static('src'));

  // Start server
  app.listen(3000, () => {
    console.log('Dev server running at http://localhost:3000');
  });
}

// Simple Vite-like build command
async function buildForProduction() {
  try {
    await build({
      entryPoints: ['src/main.js'],
      bundle: true,
      minify: true,
      outfile: 'dist/bundle.js',
      format: 'esm',
      plugins: [],
    });
    console.log('Build complete!');
  } catch (error) {
    console.error('Build failed:', error);
  }
}

// Export API
module.exports = {
  createDevServer,
  buildForProduction,
};

// Simple plugin interface (for demonstration)
function examplePlugin() {
  return {
    name: 'example-plugin',
    setup(build) {
      build.onStart(() => {
        console.log('Build started with example plugin');
      });
    },
  };
}
```

This code provides a simplified version of Vite's main functionalities, such as a development server with ES module serving, HMR placeholder, and a production build command using `esbuild` instead of `Rollup` for simplicity. Additionally, it includes a basic example of a plugin interface, demonstrating how Vite might allow plugins to extend its capabilities.