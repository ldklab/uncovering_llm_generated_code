The `es-object-atoms` package provides three main functionalities related to JavaScript objects:

1. **$Object**: This is essentially a direct reference to the built-in JavaScript `Object` constructor. It can be used in the same way the native `Object` is used.

2. **ToObject**: This is a function that attempts to convert a given value to an object. If the input value is `null` or `undefined`, it will throw a `TypeError`. For other primitive types like boolean, number, or string, it will return the corresponding object wrapper.

3. **RequireObjectCoercible**: This function checks whether a given value can be coerced into an object. If the value is `null` or `undefined`, it will throw a `TypeError`. Otherwise, it simply returns the input value. This function is useful for ensuring that operations on the provided value can be performed without encountering `null` or `undefined`.

Below is the Node.js package implementation in a single markdown code block:

```markdown
// es-object-atoms/index.js
'use strict';

module.exports = Object;

// es-object-atoms/ToObject.js
'use strict';

module.exports = function ToObject(value) {
  if (value === null || value === undefined) {
    throw new TypeError('Cannot convert undefined or null to object');
  }
  return Object(value);
};

// es-object-atoms/RequireObjectCoercible.js
'use strict';

module.exports = function RequireObjectCoercible(value) {
  if (value === null || value === undefined) {
    throw new TypeError('Cannot perform operation on undefined or null');
  }
  return value;
};

// test/test.js
'use strict';

const assert = require('assert');
const $Object = require('../es-object-atoms');
const ToObject = require('../es-object-atoms/ToObject');
const RequireObjectCoercible = require('../es-object-atoms/RequireObjectCoercible');

assert.equal($Object, Object);
assert.throws(() => ToObject(null), TypeError);
assert.throws(() => ToObject(undefined), TypeError);
assert.throws(() => RequireObjectCoercible(null), TypeError);
assert.throws(() => RequireObjectCoercible(undefined), TypeError);

assert.deepEqual(RequireObjectCoercible(true), true);
assert.deepEqual(ToObject(true), Object(true));

const obj = {};
assert.equal(RequireObjectCoercible(obj), obj);
assert.equal(ToObject(obj), obj);

console.log('All tests passed!');

// package.json
{
  "name": "es-object-atoms",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "node test/test.js"
  }
}
```
