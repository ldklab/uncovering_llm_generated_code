The functionality of the provided Node.js code is to dynamically read and aggregate Unicode property data from files within a directory structure and expose that data as a module. Here's the breakdown of the code:

1. The main script (`index.js`) is responsible for reading the contents of a directory and its subdirectories.

2. It defines a function `getProperties` that initializes an empty object `properties`, then reads through each category in the base directory. If the category is a directory, it reads the `.js` files within it.

3. Each `.js` file exports a `characters` property which is obtained via `require`, and this data is stored in the `properties` object under the relevant category.

4. The compiled `properties` object is returned and immediately exported by the module.

5. Other modules define Unicode character properties using the `regenerate` library. They provide sets of Unicode characters based on different criteria, such as general category (`Uppercase_Letter`), script extensions (`Greek`), and property of strings (`Basic_Emoji`).

6. An additional module (`unicode-version.js`) specifies the Unicode version being represented.

A rewrite that maintains the described functionality is as follows:

```javascript
// directory: regenerate-unicode-properties/index.js
const fs = require('fs');
const path = require('path');

const propertiesDir = __dirname;

function getProperties() {
  const properties = {};
  for (const category of fs.readdirSync(propertiesDir)) {
    const categoryPath = path.join(propertiesDir, category);
    if (fs.statSync(categoryPath).isDirectory()) {
      properties[category] = {};
      for (const file of fs.readdirSync(categoryPath)) {
        if (file.endsWith('.js')) {
          const propertyName = path.basename(file, '.js');
          properties[category][propertyName] = require(path.join(categoryPath, file)).characters;
        }
      }
    }
  }
  return properties;
}

module.exports = getProperties();

// directory: regenerate-unicode-properties/General_Category/Uppercase_Letter.js
const regenerate = require('regenerate');
exports.characters = regenerate()
  .addRange(0x0041, 0x005A) // A-Z
  .addRange(0x00C0, 0x00D6) // À-Ö
  .addRange(0x00D8, 0x00DE); // Ø-Þ

// directory: regenerate-unicode-properties/Script_Extensions/Greek.js
const regenerate = require('regenerate');
exports.characters = regenerate()
  .addRange(0x0370, 0x03FF); // Greek and Coptic

// directory: regenerate-unicode-properties/Property_of_Strings/Basic_Emoji.js
const regenerate = require('regenerate');
exports.characters = regenerate().addRange(0x1F600, 0x1F64F); // Emoticons
exports.strings = ['😀', '😁', '😂', '🤣', '😃', '😄'];

// directory: regenerate-unicode-properties/unicode-version.js
module.exports = 'Unicode 13.0.0';
```