```javascript
// The existing Node.js code setup is for a package called "@smithy/core". It includes configuration
// files and scripts for building, linting, and exporting a submodule.
// 
// Explanation of the Code:
// 1. `package.json`: Defines the package name, version, main entry point, and build scripts. It uses
//    `devDependencies` like TypeScript and ESLint.
// 2. `src/submodules/exampleSubmodule/index.ts`: Contains exportable TypeScript code with a function
//    `exampleFunction` logging a message.
// 3. `README.md`: A markdown file documenting the example submodule.
// 4. `Inliner.js`: A build script using `fs-extra` and `path` to ensure a distribution folder exists,
//    then copies a TypeScript file into it, simulating a simple build step by copying as is.
// 5. `.eslintrc`: ESLint configuration for Node.js and ES2021 environments. Specifies default linting
//    through extending `eslint:recommended`.
// 6. `tsconfig.json`: Defines TypeScript compilation options, targeting ES6 and CommonJS, with strict
//    type checking enabled for the source files.
//
// Rewritten Code (structured similarly to the explanation above):

// package.json
{
  "name": "@smithy/core",
  "version": "1.0.0",
  "main": "./dist/index.js",
  "exports": "./dist/submodules/exampleSubmodule/index.js",
  "scripts": {
    "build": "node Inliner.js",
    "lint": "eslint ./src"
  },
  "devDependencies": {
    "typescript": "^4.0.0",
    "eslint": "^7.0.0"
  }
}

// src/submodules/exampleSubmodule/index.ts
export function exampleFunction() {
  console.log('Example function from exampleSubmodule');
}

// src/submodules/exampleSubmodule/README.md
# Example Submodule
This is an example submodule of @smithy/core demonstrating organization and build structure.

// Inliner.js
const fs = require('fs-extra');
const path = require('path');

async function buildSubmodule() {
  const submoduleDir = path.join(__dirname, 'src', 'submodules', 'exampleSubmodule');
  const outputDir = path.join(__dirname, 'dist', 'submodules', 'exampleSubmodule');
  
  await fs.ensureDir(outputDir);
  await fs.copyFile(
    path.join(submoduleDir, 'index.ts'),
    path.join(outputDir, 'index.js') // Copy as part of the simulated build process
  );
  console.log('Submodule built successfully.');
}

buildSubmodule().catch(error => console.error(error));

// .eslintrc
{
  "env": {
    "node": true,
    "es2021": true
  },
  "extends": "eslint:recommended",
  "parserOptions": {
    "ecmaVersion": 12
  },
  "rules": {
    // Add custom ESLint rules if necessary
  }
}

// tsconfig.json
{
  "compilerOptions": {
    "target": "ES6",
    "module": "CommonJS",
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true
  },
  "include": ["src/submodules/exampleSubmodule/**/*.ts"]
}
```