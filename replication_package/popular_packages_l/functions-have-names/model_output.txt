The Node.js package `functions-have-names` is designed to determine whether the current JavaScript environment supports the `name` property on functions. This property is used to obtain the name of a function. In modern JavaScript environments, this feature is generally supported, however, older environments such as Internet Explorer 6-8 do not support it.

The functionality is implemented as a simple function that checks if the `name` property on a function is truthy. The expected return value should be `true` in environments that support this feature and `false` otherwise.

You can use this package by requiring it in your Node.js application. The use case demonstrated in the README involves the use of an assertion to check whether the result of `functionsHaveNames()` is `true`, with the note that it would return `false` in outdated environments.

Here is the implementation of the `functions-have-names` package:

```js
// functions-have-names.js
module.exports = function functionsHaveNames() {
    var testFunction = function () {};
    return typeof testFunction.name === 'string' && testFunction.name !== '';
};

// test-functions-have-names.js
var functionsHaveNames = require('./functions-have-names');
var assert = require('assert');

assert.equal(functionsHaveNames(), true);

// package.json
{
  "name": "functions-have-names",
  "version": "1.0.0",
  "description": "Check if the current JS environment supports the `name` property on functions.",
  "main": "functions-have-names.js",
  "scripts": {
    "test": "node test-functions-have-names.js"
  },
  "author": "Your Name",
  "license": "MIT"
}

// To test the package, run the following commands in the terminal:
// npm install
// npm test
```

This implementation defines a module that exports a single function, `functionsHaveNames`, which checks the `name` property on a test function to determine whether it is supported. A test script is also provided to verify the functionality using Node.js' built-in `assert` module. The package is set up with a bare-bones `package.json` to facilitate easy testing.