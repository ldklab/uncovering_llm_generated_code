The provided Node.js code defines a function `isGlob` that determines whether a given string `str` is a glob pattern. Glob patterns are strings commonly used in patterns matching file paths, and they may contain special characters like `*`, `?`, and `[...]`.

Here is a step-by-step breakdown of the code:

1. **Type Check**: The function first checks if the input `str` is of type `string`. If not, it returns `false`.

2. **Options Handling**: The function takes an optional `options` argument. If no options are provided, it defaults to an empty object. If `options.strict` is not explicitly set to `false`, it defaults to `true`.

3. **Regular Expressions**: 
   - Two sets of regular expressions are used: one for normal glob patterns (`globRegex`) and another for extended glob patterns (`extglobRegex`).
   - In strict mode, `globRegex` checks if the string contains characters typical of glob patterns and explicitly checks for glob-specific syntax.
   - `extglobRegex` identifies patterns related to extended globs which are often seen as syntactically incorrect or advanced (and thus not considered regular globs without being in special syntax).

4. **Glob Detection**: The function returns `true` if the `globRegex` matches the string and the `extglobRegex` does not. This indicates that the string is identified as a glob and not a part of complex extended glob syntax.

5. **Exportation**: The `isGlob` function is exported for use in other files.

Here is the refactored version of the code:

```javascript
// is-glob.js

function isGlob(str, options = {}) {
  if (typeof str !== 'string') return false;

  const isStrictMode = options.strict !== false;
  const globPattern = isStrictMode ? /(^.*([*?{}()[\]!+]|(!)+(?=\())+.*$)/ : /([*?{}()[\]!+])/;
  const extGlobPattern = isStrictMode ? /(\\\!|\\\*|\\\)|\\\]|\\\(|\\\{|\\@|\\\+|\\\?|\(+(?=\())/ : /(\\\!|\\\*|\\\|\\\)|\\\]|\\\(|\\\{|\\@|\\\+)/;

  return globPattern.test(str) && !extGlobPattern.test(str);
}

module.exports = isGlob;

// Example usage:
// const isGlob = require('./is-glob');
// console.log(isGlob('!foo.js')); // true
// console.log(isGlob('abc/\\*.js')); // false
// console.log(isGlob('abc.js')); // false
// console.log(isGlob(['**/*.js'])); // false
// console.log(isGlob('*.js', { strict: false })); // true
```