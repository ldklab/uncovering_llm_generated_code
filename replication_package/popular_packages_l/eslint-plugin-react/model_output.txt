The `eslint-plugin-react` package is designed to add specific linting rules for React applications when using ESLint. Below is a summary of its functionality:

1. **Installation**: The plugin requires ESLint to be installed as a development dependency, alongside the plugin itself.

2. **Configuration**:
   - **Legacy Configuration**: Often uses a `.eslintrc` file for configuring ESLint. It extends configurations such as `eslint:recommended` and `plugin:react/recommended` to enforce best practices. There's also support for the new JSX transform introduced in React 17.
   - **Settings**: The plugin allows for configuration of shared settings across React rules, like setting the `createClass`, `pragma`, `fragment`, and detecting the React version automatically.
   - **Plugins**: Add `"react"` to the `plugins` array in ESLintâ€™s configuration.
   - **Parser Options**: Enabling JSX by setting `ecmaFeatures: { jsx: true }`.
   - **Rules**: Enable specific React-related rules like `react/jsx-uses-react`, which ensures JSX doesn't mark React as unused.

3. **Shareable Configs**:
   - Offers predefined configurations like `recommended` and `all` which can be extended to use default rules or all rules, respectively.
 
4. **Modern Configuration using `eslint.config.js`**: This is a newer system that replaces `.eslintrc` files. It uses a JavaScript module to configure ESLint, allowing for more dynamic configurations.

5. **Flat Configs**: The plugin also exports flat configurations that can be used directly, which include settings for enabling JSX and can be overridden as needed.

6. **List of Supported Rules**: There are numerous rules available that enforce different stylistic and functional conventions in React components, ranging from proper naming of props to ensuring no deprecated methods are used.

Here's what the code implementation might look like based on this description:

```json
// package.json
{
  "name": "eslint-plugin-react",
  "version": "1.0.0",
  "description": "React specific linting rules for ESLint",
  "main": "index.js",
  "devDependencies": {
    "eslint": "^8.0.0",
    "eslint-plugin-react": "^1.0.0"
  }
}

// .eslintrc.json
{
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended"
  ],
  "plugins": [
    "react"
  ],
  "settings": {
    "react": {
      "createClass": "createReactClass",
      "pragma": "React",
      "fragment": "Fragment",
      "version": "detect"
    }
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error"
  }
}

// eslint.config.js
const reactPlugin = require('eslint-plugin-react');
const globals = require('globals');

module.exports = [
  {
    files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'],
    plugins: {
      react: reactPlugin
    },
    languageOptions: {
      parserOptions: {
        ecmaFeatures: {
          jsx: true
        }
      },
      globals: {
        ...globals.browser
      }
    },
    rules: {
      'react/jsx-uses-react': 'error',
      'react/jsx-uses-vars': 'error'
    }
  }
];
```