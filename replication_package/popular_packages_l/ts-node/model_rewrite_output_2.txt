The given Node.js code demonstrates the use of `ts-node` in two ways: programmatically and as an executable script.

1. **Programmatic Usage**:
   - The line `require('ts-node').register();` is used to register `ts-node` within a Node.js environment. This setup enables runtime transpilation of TypeScript files into JavaScript.
   - After registering `ts-node`, the script uses `require` to import a TypeScript file (`./some-typescript-file.ts`). The file can be written in TypeScript, and it will be transpiled to JavaScript on the fly by `ts-node`.

2. **Executable Script Usage**:
   - The script starts with a shebang line (`#!/usr/bin/env ts-node`), which allows it to be run as an executable file directly in environments that support shebangs (e.g., Unix-like systems).
   - The line `console.log("Hello, TypeScript World!");` is TypeScript code that logs a message to the console. When you run the script directly, `ts-node` will execute it.

Here is a possible rewrite of the code, organized and using modern syntax:

```markdown
// Import and register ts-node for programmatic TypeScript execution
require('ts-node/register');

// Import and execute a TypeScript file, transpiling it on-the-fly
require('./some-typescript-file.ts');

#!/usr/bin/env ts-node
// Executable TypeScript script logging a message to the console
console.log("Hello, TypeScript World!");
```