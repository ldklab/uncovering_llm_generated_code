The provided Node.js code demonstrates the use of the `jsdom` library to create and manipulate DOM representations in a Node.js environment. Here's a breakdown of its functionality:

1. **Basic DOM Creation and Querying:**
   - Creates a simple DOM with a paragraph containing "Hello world".
   - Logs the text content of the paragraph.

2. **Customizing jsdom Options:**
   - Instantiates a DOM with additional options like setting a custom URL, referrer, content type, enabling node locations, and setting a storage quota.
   - Logs the customized location URL and referrer.

3. **Script Execution Using "dangerously":**
   - Creates a DOM with a script that manipulates the DOM by adding an `<hr>` element inside a `<div>` with the id "content".
   - Logs the number of children in the "content" div, which should be 1 after script execution.

4. **Simulation of a Visual Browser:**
   - Initializes a DOM pretending to be a visual browser.
   - Uses requestAnimationFrame to demonstrate a visual update cycle, logging whether the timestamp is greater than 0.

5. **Subresource Loading with a Custom Resource Loader:**
   - Sets up a resource loader with specific configurations like proxy settings, SSL policy, and user-agent string.
   - Creates a DOM instance to demonstrate resource loading, such as an image, and logs the image source.

Here is the possible rewrite of the given code:

```javascript
// index.js
const jsdom = require("jsdom");
const { JSDOM, ResourceLoader } = jsdom;

// Basic DOM example
const dom = new JSDOM(`<!DOCTYPE html><p>Hello world</p>`);
console.log(dom.window.document.querySelector("p").textContent); // "Hello world"

// Customized DOM with additional options
const customizedDom = new JSDOM(`<!DOCTYPE html><p>Hello world</p>`, {
  url: "https://example.org/",
  referrer: "https://example.com/",
  contentType: "text/html",
  includeNodeLocations: true,
  storageQuota: 10e6
});

console.log(customizedDom.window.location.href); // "https://example.org/"
console.log(customizedDom.window.document.referrer); // "https://example.com/"

// DOM with script execution
const scriptedDom = new JSDOM(`<body>
  <div id="content"></div>
  <script>document.getElementById("content").append(document.createElement("hr"));</script>
</body>`, { runScripts: "dangerously" });

console.log(scriptedDom.window.document.getElementById("content").children.length); // 1

// Pretend to be a visual browser
const visualDom = new JSDOM(``, { pretendToBeVisual: true });
visualDom.window.requestAnimationFrame(timestamp => {
  console.log(timestamp > 0); // true
});

// DOM with custom resource loader
const resourceLoader = new ResourceLoader({
  proxy: "http://127.0.0.1:9001",
  strictSSL: false,
  userAgent: "Mozilla/5.0"
});

const resourceDom = new JSDOM(`<!DOCTYPE html><img src="foo.jpg">`, { resources: resourceLoader });
console.log(resourceDom.window.document.querySelector("img").src);
```