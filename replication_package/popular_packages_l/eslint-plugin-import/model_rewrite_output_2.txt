The provided Node.js project demonstrates setting up a basic project using ESLint with the `eslint-plugin-import` to enforce proper import/export rules and manage module resolution. The project consists of multiple configuration files and JavaScript files:

1. **package.json**: This file defines a Node.js project with the name `eslint-plugin-import-sample`. It specifies the project version, lists the `eslint` and `eslint-plugin-import` as development dependencies, and includes a script for running ESLint to lint the code in the current directory.

2. **.eslintrc.js**: This file is an ESLint configuration file that:
   - Extends the configurations from `eslint:recommended` and `plugin:import/recommended`.
   - Configures the resolver settings under `import/resolver` to handle files with `.js`, `.mjs`, and `.json` extensions when importing modules.
   - Specifies specific `import` related rules such as `import/no-unresolved` to ensure all imports can be resolved, `import/named` to ensure named imports correspond to a named export in the remote file, etc., and treats these issues as errors.

3. **index.js**: This file imports a named export `example` from `example.js` using ES Module syntax.

4. **example.js**: This file exports a constant `example`, which is a function logging "Example function" to the console.

5. **README.md**: This README file provides an overview of the project, mentioning that it uses `eslint-plugin-import` to enforce import/export rules. It also includes a placeholder step for setting up the project by installing its dependencies.

```markdown
// File: package.json
{
  "name": "eslint-plugin-import-sample",
  "version": "1.0.0",
  "main": "index.js",
  "devDependencies": {
    "eslint": "^8.0.0",
    "eslint-plugin-import": "^2.30.0"
  },
  "scripts": {
    "lint": "eslint ."
  }
}

// File: .eslintrc.js
module.exports = {
  extends: [
    'eslint:recommended',
    'plugin:import/recommended'
  ],
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.mjs', '.json']
      }
    }
  },
  rules: {
    'import/no-unresolved': 'error',
    'import/named': 'error',
    'import/namespace': 'error',
    'import/default': 'error',
    'import/export': 'error'
  }
};

// File: index.js
import { example } from './example.js';

// File: example.js
export const example = () => {
  console.log("Example function");
};

// File: README.md
# Sample ESLint Plugin Import Project

This is a sample implementation using `eslint-plugin-import` to enforce import/export rules and ensure proper module resolution in a project.

## Setup

1. Install dependencies:
```