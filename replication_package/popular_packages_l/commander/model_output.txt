The `Commander.js` package is a comprehensive solution for creating command-line interfaces (CLI) in Node.js. It provides a way to define commands, options, and arguments for CLI programs. The typical process involves setting up program commands and options, parsing command-line inputs, and then executing relevant actions based on the parsed data. The package supports both inline action handlers and subcommands as stand-alone executables. Moreover, it includes features like automated help generation, custom argument and option processing, support for variadic and required options, and more. With this package, developers can build robust CLI tools with minimal boilerplate code.

Below is the implementation of a simple Node.js package with the functionality described:

```js
// index.js
const { Command } = require('commander');

const program = new Command();

program
  .version('1.0.0')
  .name('string-util')
  .description('CLI to some JavaScript string utilities');

// Define a 'split' command
program
  .command('split')
  .description('Split a string into substrings and display as an array')
  .argument('<string>', 'string to split')
  .option('--first', 'display just the first substring')
  .option('-s, --separator <char>', 'separator character', ',')
  .action((str, options) => {
    const limit = options.first ? 1 : undefined;
    console.log(str.split(options.separator, limit));
  });

// Parser and execute the input command
program.parse(process.argv);

// Usage examples (to test run using: node index.js ...inputs)
// $ node index.js split --separator=/ a/b/c
// [ 'a', 'b', 'c' ]
// $ node index.js split --first --separator=/ a/b/c
// [ 'a' ]
```

This example demonstrates how `Commander.js` is used to create a CLI tool named `string-util` that has a `split` subcommand. This subcommand can split strings based on a separator and has options to display only the first substring. The example includes basic versioning and a description of the CLI tool, along with default and custom separators.