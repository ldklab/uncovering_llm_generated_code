The Node.js code provided implements a function called `chownRecursive` that changes the ownership of a directory and its contents (both files and subdirectories) recursively. It takes three arguments: `dirPath` (the path of the directory to change ownership), `uid` (the user ID to set as the owner), and `gid` (the group ID to set as the owner).

Here's what the code does:

1. It uses `fs.lstat` to check if the provided path is a directory or a file.
2. If it's a directory, it changes the ownership of the directory itself using `fs.chown`.
3. It reads the contents of the directory with `fs.readdir`.
4. For each item inside the directory, it constructs the full path and applies the `chownRecursive` function recursively. This ensures ownership is changed for all nested contents.
5. If it's a file, it directly changes the ownership using `fs.chown`.
6. Errors during any file operations are logged to the console.
7. The `chownRecursive` function is exported using `module.exports`, making it available for import and use in other files.

Below is a possible rewrite of the code with the same functionality:

```javascript
const fs = require('fs');
const path = require('path');

/**
 * Change ownership of files and directories recursively.
 * @param {string} dirPath - The path of the directory.
 * @param {number} uid - The user ID.
 * @param {number} gid - The group ID.
 */
function changeOwnershipRecursively(dirPath, uid, gid) {
  fs.lstat(dirPath, (error, stats) => {
    if (error) {
      console.error(`Error reading ${dirPath}:`, error.message);
      return;
    }

    const changeOwnership = (pathToChange) => {
      fs.chown(pathToChange, uid, gid, (error) => {
        if (error) {
          console.error(`Error changing ownership of ${pathToChange}:`, error.message);
        }
      });
    };

    if (stats.isDirectory()) {
      // Change ownership of the directory
      changeOwnership(dirPath);

      // Read the directory contents
      fs.readdir(dirPath, (error, files) => {
        if (error) {
          console.error(`Error reading directory ${dirPath}:`, error.message);
          return;
        }
        
        // Recursively change ownership for contents
        files.forEach((file) => {
          changeOwnershipRecursively(path.join(dirPath, file), uid, gid);
        });
      });
    } else {
      // Change ownership of the file
      changeOwnership(dirPath);
    }
  });
}

module.exports = changeOwnershipRecursively;
```