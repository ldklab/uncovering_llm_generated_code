The provided Node.js code defines a function `chownRecursive` that recursively changes the ownership of a directory and its contents (both files and subdirectories) by changing the user ID (uid) and group ID (gid) of each. It uses the `fs` module to perform file operations and the `path` module to handle file paths. The function first checks if the path corresponds to a directory or a file. If it's a directory, it changes its ownership and then reads its contents to recursively apply the `chown` operation to each. This process continues until all files and directories have been processed. The function logs errors to the console in case of failures. The function is exported at the end for use in other modules.

```js
const fs = require('fs');
const path = require('path');

/**
 * Recursively change ownership of files and directories.
 * @param {string} dirPath - Path of the directory or file.
 * @param {number} uid - User ID.
 * @param {number} gid - Group ID.
 */
function changeOwnershipRecursively(dirPath, uid, gid) {
  fs.lstat(dirPath, (err, stats) => {
    if (err) {
      console.error(`Failed to retrieve stats for ${dirPath}: ${err.message}`);
      return;
    }

    if (stats.isDirectory()) {
      fs.chown(dirPath, uid, gid, (err) => {
        if (err) {
          console.error(`Failed to set ownership for directory ${dirPath}: ${err.message}`);
          return;
        }

        fs.readdir(dirPath, (err, items) => {
          if (err) {
            console.error(`Failed to read contents of ${dirPath}: ${err.message}`);
            return;
          }

          items.forEach((item) => {
            const resolvedPath = path.resolve(dirPath, item);
            changeOwnershipRecursively(resolvedPath, uid, gid);
          });
        });
      });
    } else {
      fs.chown(dirPath, uid, gid, (err) => {
        if (err) {
          console.error(`Failed to set ownership for file ${dirPath}: ${err.message}`);
        }
      });
    }
  });
}

module.exports = changeOwnershipRecursively;
```