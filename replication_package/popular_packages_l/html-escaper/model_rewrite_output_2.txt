The Node.js code defines a module for escaping and unescaping HTML entities in strings. This is useful for ensuring that special characters in HTML content are safely encoded or decoded. The module exports two functions, `escape` and `unescape`.

- `escape`: This function takes a string as input and replaces special HTML characters (`&`, `<`, `>`, `"`, and `'`) with their corresponding HTML entities (`&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;`). It uses a regular expression to find these characters and references a mapping object `escapeMap` to convert each character.

- `unescape`: This function takes a string that contains HTML entities and converts them back to their original characters. It uses another regular expression to identify the HTML entities and a mapping object `unescapeMap` to perform the conversion back to their corresponding characters.

Here is a rewritten version of the original code:

```markdown
// html-escaper.js
const escapeMap = new Map([
  ['&', '&amp;'],
  ['<', '&lt;'],
  ['>', '&gt;'],
  ["'", '&#39;'],
  ['"', '&quot;']
]);

const unescapeMap = new Map([
  ['&amp;', '&'],
  ['&lt;', '<'],
  ['&gt;', '>'],
  ['&#39;', "'"],
  ['&quot;', '"']
]);

const escaper = /[&<>'"]/g;
const unescaper = /&(amp|lt|gt|#39|quot);/g;

function escape(str) {
  return str.replace(escaper, char => escapeMap.get(char));
}

function unescape(str) {
  return str.replace(unescaper, entity => unescapeMap.get(entity));
}

export { escape, unescape };
```