The provided Node.js code is an HTML escaper and unescaper module. It performs the following tasks:

1. **Escape Functionality:** 
   - The `escape` function converts special characters like `&`, `<`, `>`, `'`, and `"` into their corresponding HTML entities (`&amp;`, `&lt;`, `&gt;`, `&#39;`, and `&quot;` respectively).
   - This is done using a regular expression to find these characters and a map (`escapeMap`) to replace them with their HTML-escaped counterparts.

2. **Unescape Functionality:** 
   - The `unescape` function reverses this process, converting HTML entities (`&amp;`, `&lt;`, `&gt;`, `&#39;`, and `&quot;`) back into their original characters (`&`, `<`, `>`, `'`, and `"`).
   - Similarly, it uses a regular expression to find these entities and a map (`unescapeMap`) to replace them with the original characters.

Here's a possible rewrite of this Node.js code:

```javascript
// html-escaper.js
const escapeMap = new Map([
  ['&', '&amp;'],
  ['<', '&lt;'],
  ['>', '&gt;'],
  ["'", '&#39;'],
  ['"', '&quot;']
]);

const unescapeMap = new Map([
  ['&amp;', '&'],
  ['&lt;', '<'],
  ['&gt;', '>'],
  ['&#39;', "'"],
  ['&quot;', '"']
]);

const escaper = /[&<>'"]/g;
const unescaper = /&(amp|lt|gt|#39|quot);/g;

function escape(str) {
  return str.replace(escaper, match => escapeMap.get(match));
}

function unescape(str) {
  return str.replace(unescaper, match => unescapeMap.get(match));
}

export { escape, unescape };
```