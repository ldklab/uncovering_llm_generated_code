The Node.js code provided is a WebSocket server-client setup with two files: `ws-server.js` and `ws-client.js`.

**Functionality Explanation:**

- **WebSocket Server (`ws-server.js`):**
  - A WebSocket server is created and listens on port 8080.
  - When a client connects, the server sends a welcome message to the client.
  - The server listens for any messages from the client and logs them to the console. It also echoes back the received messages, prepending "Echo:" to each message.
  - The server handles any errors that occur during the client's WebSocket connection.
  
- **WebSocket Client (`ws-client.js`):**
  - The client establishes a WebSocket connection to the server at `ws://localhost:8080`.
  - Upon a successful connection, the client sends a greeting message to the server.
  - The client listens for messages from the server and logs them to the console.
  - It also handles errors during the connection and logs a message when the connection is closed.

```javascript
// Revised WebSocket Server (ws-server.js)
const { WebSocketServer } = require('ws');

const server = new WebSocketServer({ port: 8080 });

server.on('connection', (socket) => {
  socket.on('error', console.error);

  socket.on('message', (data) => {
    console.log('Received:', data);
    socket.send(`Echo: ${data}`);
  });

  socket.send('Hello! Message From Server!!');
});

console.log('WebSocket server is listening on ws://localhost:8080');

// Revised WebSocket Client (ws-client.js)
const WebSocket = require('ws');

const client = new WebSocket('ws://localhost:8080');

client.on('error', console.error);

client.on('open', () => {
  console.log('Connected to server');
  client.send('Hello, Server!');
});

client.on('message', (message) => {
  console.log('Server says:', message);
});

client.on('close', () => {
  console.log('Disconnected from server');
});
```