The Node.js code consists of two files: `ws-server.js` and `ws-client.js`. The `ws-server.js` sets up a simple WebSocket server using the `ws` library that listens on port 8080. When a client connects to this server, it sends a welcome message to the client. The server listens for incoming messages and echoes them back prefixed with "Echo:". It also logs received messages to the console. Additionally, the server logs error events to the console.

The `ws-client.js` script demonstrates a WebSocket client that connects to the server at `ws://localhost:8080`. Upon establishing a connection, the client sends a message "Hello, Server!" to the server. The client listens for messages from the server and logs them to the console. It also handles errors and logs them, and logs a message when the connection to the server is closed.

Here's a possible rewritten version of the code:

```js
// ws-server.js
const WebSocket = require('ws');

const server = new WebSocket.Server({ port: 8080 });

server.on('connection', (client) => {
  client.on('error', console.error);

  client.on('message', (data) => {
    console.log('Received:', data);
    client.send(`Echo: ${data}`);
  });

  client.send('Hello! Message From Server!!');
});

console.log('WebSocket server is listening on ws://localhost:8080');

// ws-client.js
const WebSocket = require('ws');

const client = new WebSocket('ws://localhost:8080');

client.on('error', console.error);

client.on('open', () => {
  console.log('Connected to server');
  client.send('Hello, Server!');
});

client.on('message', (data) => {
  console.log('Server says:', data);
});

client.on('close', () => {
  console.log('Disconnected from server');
});
```