The `is-symbol` package is a simple utility to check whether a given value is an ES6 Symbol. Symbols are a primitive data type introduced in ES6, and they are often used to create unique, constant identifiers.

### Functionality

The package exports a single function that determines if the input value is a symbol. The function checks both direct Symbol instances and symbol objects created using the `Object` function.

### Example Usage

- `isSymbol(function () {})` should return `false` because a function is not a symbol.
- `isSymbol(null)` should return `false` because `null` is not a symbol.
- `isSymbol(Symbol.iterator)` should return `true` because `Symbol.iterator` is a predefined symbol.
- `isSymbol(Symbol('foo'))` should return `true` because it is a direct symbol.
- `isSymbol(Symbol.for('foo'))` should return `true` because it is a symbol obtained using `Symbol.for`.
- `isSymbol(Object(Symbol('foo')))` should return `true` because it is a symbol object.

### Testing

The tests for this package can be run by cloning its repository, running `npm install` to install dependencies, and using `npm test` to execute the tests.

Here is the code for the `is-symbol` package:

```markdown
// index.js

function isSymbol(value) {
    return typeof value === 'symbol' || 
           (typeof value === 'object' && value instanceof Symbol);
}

module.exports = isSymbol;
```

```markdown
// test.js

const assert = require('assert');
const isSymbol = require('./index');

// Test cases
assert.strictEqual(isSymbol(function () {}), false, 'function is not a symbol');
assert.strictEqual(isSymbol(null), false, 'null is not a symbol');
assert.strictEqual(isSymbol(function* () { yield 42; return Infinity; }), false, 'generator is not a symbol');

assert.strictEqual(isSymbol(Symbol.iterator), true, 'Symbol.iterator is a symbol');
assert.strictEqual(isSymbol(Symbol('foo')), true, 'Symbol("foo") is a symbol');
assert.strictEqual(isSymbol(Symbol.for('foo')), true, 'Symbol.for("foo") is a symbol');
assert.strictEqual(isSymbol(Object(Symbol('foo'))), true, 'Object(Symbol("foo")) is a symbol');
```

```markdown
// package.json

{
  "name": "is-symbol",
  "version": "1.0.0",
  "description": "Check if a value is an ES6 Symbol",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "symbol",
    "check",
    "es6"
  ],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "assert": "^2.0.0"
  }
}
```