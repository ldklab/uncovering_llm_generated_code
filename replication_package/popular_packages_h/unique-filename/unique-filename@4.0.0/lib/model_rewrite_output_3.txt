The functionality of the Node.js code is to generate a unique directory path by combining a given file path, an optional prefix, and a unique slug. Here is a breakdown of the code:

1. It imports the `path` module from Node.js, which provides utilities for working with file and directory paths.
2. It imports the `unique-slug` module, which generates a unique identifier (slug) based on some input â€” in this case, the `uniq` argument.
3. The module exports a function that takes three parameters: 
   - `filepath`: the base path where the unique directory path will be formed.
   - `prefix`: an optional string that will be added before the unique slug.
   - `uniq`: a value used to ensure that the slug is unique by passing it to the `uniqueSlug` function.
4. Inside the function, the `path.join` method is used to combine the given `filepath` with a string constructed from the optional `prefix` (appended with a hyphen if provided) and a unique slug generated by calling `uniqueSlug(uniq)`.

Here's a possible rewrite of the original code:

```javascript
const path = require('path');
const uniqueSlug = require('unique-slug');

module.exports = function createUniquePath(basePath, optionalPrefix, uniqueInput) {
  const prefixPart = optionalPrefix ? `${optionalPrefix}-` : '';
  const uniquePart = uniqueSlug(uniqueInput);
  return path.join(basePath, `${prefixPart}${uniquePart}`);
};
```