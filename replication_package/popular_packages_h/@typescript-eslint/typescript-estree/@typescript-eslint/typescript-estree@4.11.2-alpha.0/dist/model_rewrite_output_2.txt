The given Node.js code is a module that facilitates exporting functionalities from various files and packages. Hereâ€™s a breakdown of what each section does:

1. **Helper Functions:** `__createBinding` and `__exportStar` are helper functions used throughout the code to define property bindings and re-export all non-default exports from a module.

2. **Exporting Individual Named Exports:** 
   - `simpleTraverse` is imported from the `simple-traverse` module and exported as a named export.
   - `clearCaches` is imported from the `createWatchProgram` in `create-program` and is also exported.

3. **Re-exporting Modules:**
   - It re-exports all exports from `./parser` and `./ts-estree` via `__exportStar`.
   - `visitorKeys` is re-exported from the `@typescript-eslint/visitor-keys` module.

4. **Handling `package.json` Data:**
   - The module exports a `version` property, which directly pulls the version number from the `package.json` file. This is done in a way to avoid TypeScript compiler (TSC) copying the `package.json` file to the distribution directory.

Below is the rewritten version of the code, preserving its original functionality but simplifying and using more modern JavaScript syntax where applicable:

```javascript
"use strict";

const { simpleTraverse } = require("./simple-traverse");
const { clearCaches } = require("./create-program/createWatchProgram");
const { visitorKeys } = require("@typescript-eslint/visitor-keys");

const parserExports = require("./parser");
const tsEstreeExports = require("./ts-estree");
const packageVersion = require('../package.json').version;

Object.assign(exports, parserExports, tsEstreeExports);

exports.simpleTraverse = simpleTraverse;
exports.clearCaches = clearCaches;
exports.visitorKeys = visitorKeys;
exports.version = packageVersion;
```