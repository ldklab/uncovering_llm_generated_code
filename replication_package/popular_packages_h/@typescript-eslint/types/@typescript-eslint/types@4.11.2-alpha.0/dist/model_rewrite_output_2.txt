The provided Node.js code is a module setup script often used in TypeScript or JavaScript projects for exporting other modules with specific functionalities, constants, or types. Here's its functionality explained, followed by a potential rewrite:

1. **Helper Functions**:
   - **`__createBinding`**: Function used to create a property structure to bind a property from one module to another.
   - **`__setModuleDefault`**: Sets a "default" export if available in a module.
   - **`__exportStar`**: Re-exports all exports from a module except the default one.
   - **`__importStar`**: Imports all exports of a module as a single object.

2. **Setting Exports**:
   - The module exports various specific modules and constructs:
     - `AST_NODE_TYPES` is imported from `./ast-node-types` and made available for export.
     - `AST_TOKEN_TYPES` is imported from `./ast-token-types` and similarly exported.
     - All exports from `./lib` and `./parser-options` are re-exported.
     - The entire module from `./ts-estree` is imported and bound to `TSESTree` for export.

Here is the rewritten code based on the explanation above:

```javascript
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });

var ast_node_types_1 = require("./ast-node-types");
exports.AST_NODE_TYPES = ast_node_types_1.AST_NODE_TYPES;

var ast_token_types_1 = require("./ast-token-types");
exports.AST_TOKEN_TYPES = ast_token_types_1.AST_TOKEN_TYPES;

Object.keys(require('./lib')).forEach(key => {
  if (key !== "default" && !exports.hasOwnProperty(key)) {
    exports[key] = require('./lib')[key];
  }
});

Object.keys(require('./parser-options')).forEach(key => {
  if (key !== "default" && !exports.hasOwnProperty(key)) {
    exports[key] = require('./parser-options')[key];
  }
});

const TSESTree = require('./ts-estree');
exports.TSESTree = Object.assign({}, TSESTree);
```

This version eliminates the helper functions and instead directly handles imports and exports with native and straightforward JavaScript logic.