The provided Node.js script is a CommonJS module that exports multiple AWS SSO OIDC (Single Sign-On OpenID Connect) service commands, error classes, and utility functions. These components facilitate the interaction with AWS SSO OIDC API to manage token creation, client registration, device authorization, and handle related exceptions. The module uses AWS SDK and Smithy (a protocol-generating framework) to configure and resolve API requests, handle middleware, and process serialization and deserialization of API operations.

The key features include:
1. Command classes (e.g., `CreateTokenCommand`, `RegisterClientCommand`) for making specific API requests.
2. Exception classes (e.g., `AccessDeniedException`, `ExpiredTokenException`) for handling various API response errors.
3. Utility functions for filtering sensitive logs and serializing/deserializing requests and responses.
4. Middleware integration and configuration functions to customize the HTTP client and region configurations.

Here's a possible rewrite of this functionality in a cleaner format and using modern ECMAScript modules (ESM):

```javascript
import {
  Client,
  Command,
  ServiceException,
  SENSITIVE_STRING,
  createAggregatedClient,
  take,
  _json,
  map,
  expectString,
  expectInt32,
  expectLong,
  expectNonNull,
  expectObject,
  parseJsonBody,
  decorateServiceException,
  withBaseException,
} from '@smithy/smithy-client';

// Exception classes to handle different API response errors
class AccessDeniedException extends ServiceException {
  constructor(opts) {
    super({ name: 'AccessDeniedException', $fault: 'client', ...opts });
    Object.setPrototypeOf(this, AccessDeniedException.prototype);
  }
}

class AuthorizationPendingException extends ServiceException {
  constructor(opts) {
    super({ name: 'AuthorizationPendingException', $fault: 'client', ...opts });
    Object.setPrototypeOf(this, AuthorizationPendingException.prototype);
  }
}

// Define other exception classes similarly...

const CreateTokenRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  clientSecret: obj.clientSecret ? SENSITIVE_STRING : undefined,
  refreshToken: obj.refreshToken ? SENSITIVE_STRING : undefined,
  codeVerifier: obj.codeVerifier ? SENSITIVE_STRING : undefined,
});

// Define other filter functions similarly...

class SSOOIDCClient extends Client {
  constructor(configuration) {
    super(configuration);
    this.middlewareStack.use(getUserAgentPlugin(this.config));
    this.middlewareStack.use(getRetryPlugin(this.config));
    this.middlewareStack.use(getContentLengthPlugin(this.config));
    this.middlewareStack.use(getHostHeaderPlugin(this.config));
    this.middlewareStack.use(getLoggerPlugin(this.config));
  }

  destroy() {
    super.destroy();
  }
}

const commands = {
  CreateTokenCommand,
  // Add other command classes similarly...
};

class SSOOIDC extends SSOOIDCClient {}

createAggregatedClient(commands, SSOOIDC);

export {
  SSOOIDC,
  SSOOIDCClient,
  AccessDeniedException,
  AuthorizationPendingException,
  // Export other components similarly...
};
```