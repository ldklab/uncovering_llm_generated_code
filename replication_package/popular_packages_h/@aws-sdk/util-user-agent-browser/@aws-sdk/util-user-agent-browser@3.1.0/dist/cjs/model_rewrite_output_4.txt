The original Node.js code defines a function called `defaultUserAgent` which constructs a user agent string with metadata about the current environment. Using the `bowser` library, the function parses the browser's user agent string to extract information about the OS and browser version. The resulting user agent string includes metadata for the AWS SDK being used, the operating system, language, and browser information. If a `serviceId` is provided, additional metadata is included for the API service in use.

Here's a similar but rewritten version of the code:

```javascript
"use strict";
const bowser = require("bowser");

function getUserAgentString(serviceId, clientVersion) {
    return async function() {
        const userAgent = window?.navigator?.userAgent;
        const parsedUA = userAgent ? bowser.parse(userAgent) : undefined;

        const sections = [
            ["aws-sdk-js", clientVersion],
            [`os/${parsedUA?.os?.name || "other"}`, parsedUA?.os?.version],
            ["lang/js"],
            [`md/browser`, `${parsedUA?.browser?.name || "unknown"}_${parsedUA?.browser?.version || "unknown"}`],
        ];

        if (serviceId) {
            sections.push([`api/${serviceId}`, clientVersion]);
        }

        return sections;
    };
}

module.exports.defaultUserAgent = getUserAgentString;
```

This rewritten code uses more modern JavaScript syntax while maintaining the functionality of the original code. It replaces the asynchronous function with an immediately-returned function, cleans the unnecessary commenting, and ensures the code looks more readable and concise.