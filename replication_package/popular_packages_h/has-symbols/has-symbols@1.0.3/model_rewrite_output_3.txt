The code defines a function `hasNativeSymbols` that checks whether the JavaScript environment supports native symbols. It first checks if the data type of the built-in `Symbol` is a function and whether creating a symbol using `Symbol('foo')` results in a value of type 'symbol'. Additionally, it includes a check by calling a function `hasSymbolSham`, presumably to handle cases where environments might have incomplete or sham implementations of symbols. The check results in `false` if any of these conditions are not met, otherwise it returns the result of `hasSymbolSham`.

```javascript
'use strict';

const origSymbol = typeof Symbol !== 'undefined' && Symbol;
const hasSymbolSham = require('./shams');

function hasNativeSymbols() {
    if (typeof origSymbol !== 'function') { return false; }
    if (typeof Symbol !== 'function') { return false; }
    if (typeof origSymbol('foo') !== 'symbol') { return false; }
    if (typeof Symbol('bar') !== 'symbol') { return false; }

    return hasSymbolSham();
}

module.exports = hasNativeSymbols;
```