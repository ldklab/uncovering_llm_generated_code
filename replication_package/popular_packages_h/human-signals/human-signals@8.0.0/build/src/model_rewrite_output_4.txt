The provided Node.js code has the following functionality:

1. **Imports**: It imports constants from the Node.js OS module and some custom modules `realtime.js` and `signals.js`. The `constants` module provides system-related constants, and `SIGRTMAX` is supposed to be the maximum number for real-time signals from `realtime.js`.

2. **getSignalsByName**: This function calls `getSignals()` to retrieve an array of signal objects, each representing a signal with various properties like `name`, `number`, `description`, etc. It then transforms this array into an object where each property is a signal's name, and its value is an object containing its details. The `getSignalByName` helper function is used to map properties to their corresponding values.

3. **signalsByName**: It is an exported constant that holds signals mapped by their name, generated by calling `getSignalsByName`.

4. **getSignalsByNumber**: This function also leverages `getSignals()` to get the signal details but this time organized by their `number` (id). It creates an array of signals of size `SIGRTMAX + 1`, and populates it using the `getSignalByNumber` function, which finds and structures each signal data by its number. The `Object.assign` method collapses the array of objects into a single object.

5. **signalsByNumber**: It is another exported constant that holds signals mapped by their number, initialized by `getSignalsByNumber`.

6. **Helper Functions**: 

   - `getSignalByName` and `getSignalByNumber` are utility functions used to format signals into structured objects.
   
   - `findSignalByNumber` is specifically used within `getSignalByNumber` to find a signal by number from an array of signals, first through the `constants.signals` mapping and then by direct property comparison.

Here's a possible rewrite of the code with the same functionality:

```javascript
import { constants } from "node:os";
import { SIGRTMAX } from "./realtime.js";
import { getSignals } from "./signals.js";

const getSignalsByName = () => {
  const signals = getSignals();
  return Object.fromEntries(signals.map(signal => ({
    [signal.name]: signal
  })));
};

export const signalsByName = getSignalsByName();

const getSignalsByNumber = () => {
  const signals = getSignals();
  const length = SIGRTMAX + 1;
  const signalsArray = Array.from({ length }, (_, number) => getSignalByNumber(number, signals));
  return Object.assign({}, ...signalsArray);
};

const getSignalByNumber = (number, signals) => {
  const signal = findSignalByNumber(number, signals);
  return signal ? { [number]: signal } : {};
};

const findSignalByNumber = (number, signals) => {
  return signals.find(({ name }) => constants.signals[name] === number) ||
         signals.find(signal => signal.number === number);
};

export const signalsByNumber = getSignalsByNumber();
```
