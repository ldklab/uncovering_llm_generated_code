The given Node.js code provides functionality to retrieve system signal information in two forms: by signal name and by signal number. It imports constants from the Node.js `os` module and additional signal-related data from external sources. Here's a breakdown of the key functionality:

1. **Imports**:
   - `constants` from the `node:os` module to access signal constants.
   - `SIGRTMAX`, presumably a constant indicating the maximum real-time signal number.
   - `getSignals`, a function to retrieve an array of signal metadata, from another module.

2. **Signal Retrieval by Name**:
   - The function `getSignalsByName` retrieves all signals and transforms them into an object with signal names as keys, and the corresponding signal data as values using `Object.fromEntries`.
   - `getSignalByName` creates a key-value pair for a signal using its name and detailed properties.

3. **Signal Retrieval by Number**:
   - The function `getSignalsByNumber` generates an object of signals indexed by their signal number.
   - It uses `SIGRTMAX` to determine the array length to construct an array of signal data.
   - `getSignalByNumber` finds a signal object based on its number, constructing an object with the number as the key, if a match is found.
   - `findSignalByNumber` searches for a signal in the available signal list, first by using the `constants` and then directly matching the number.

4. **Exported Constants**:
   - `signalsByName` is an object containing all signals indexed by name, generated by calling `getSignalsByName()`.
   - `signalsByNumber` is an object containing all signals indexed by number, created by `getSignalsByNumber()`.

Rewritten Code:
```javascript
import { constants } from "node:os";
import { SIGRTMAX } from "./realtime.js";
import { getSignals } from "./signals.js";

const getSignalsByName = () => {
  const signals = getSignals();
  return Object.fromEntries(signals.map((signal) => [
    signal.name,
    signal
  ]));
};

export const signalsByName = getSignalsByName();

const getSignalsByNumber = () => {
  const signals = getSignals();
  const signalObjects = Array.from({ length: SIGRTMAX + 1 }, (_, number) =>
    getSignalByNumber(number, signals)
  );
  return Object.assign({}, ...signalObjects);
};

const getSignalByNumber = (number, signals) => {
  const signal = findSignalByNumber(number, signals);
  return signal ? {
    [number]: signal
  } : {};
};

const findSignalByNumber = (number, signals) => {
  return signals.find(({ name }) => constants.signals[name] === number) || 
         signals.find((signal) => signal.number === number);
};

export const signalsByNumber = getSignalsByNumber();
```