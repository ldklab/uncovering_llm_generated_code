The provided Node.js code is a module that exports a single function. This function takes an array `xs` and a function `fn` as arguments. The function `fn` is called with each element of the array `xs` (along with its index). The result of each function call is appended to a results array `res`.

The code checks if the result of the function `fn` is an array using a polyfill check for `Array.isArray`. If it is an array, the elements of this array are concatenated to `res` using `Array.prototype.push.apply()`. If it is not an array, the result is pushed as a single element onto `res`. At the end, the results array is returned.

Here's a possible rewrite of the original Node.js code:

```javascript
'use strict';

const isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};

module.exports = (xs, fn) => {
    const res = [];
    xs.forEach((item, i) => {
        const x = fn(item, i);
        if (isArray(x)) {
            res.push(...x);
        } else {
            res.push(x);
        }
    });
    return res;
};
```