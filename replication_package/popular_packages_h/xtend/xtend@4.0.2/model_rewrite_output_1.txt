The provided Node.js code exports a function named `extend`. This function takes any number of objects as arguments and returns a new object that combines the properties of all these source objects. Fields from objects passed later in the arguments list will overwrite those from earlier objects if they share the same keys.

Here is a rewrite of the provided code:

```javascript
module.exports = extend;

function extend(...sources) {
    const target = {};

    sources.forEach(source => {
        Object.keys(source).forEach(key => {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        });
    });

    return target;
}
```