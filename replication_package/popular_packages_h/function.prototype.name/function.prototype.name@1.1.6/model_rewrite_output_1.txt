The given Node.js code is creating a module that exports a function `bound`, which is the result of binding the `implementation` function with a `callBind`. The module also defines additional properties on this `bound` function, namely `getPolyfill`, `implementation`, and `shim`, making them part of the exported object. These properties are assigned respective modules that are imported at the beginning.

Here's a possible rewrite of the given code:

```javascript
'use strict';

const defineProperties = require('define-properties');
const callBind = require('call-bind');

const implementation = require('./implementation');
const getPolyfill = require('./polyfill');
const shim = require('./shim');

const boundFunction = callBind(implementation);

defineProperties(boundFunction, {
  getPolyfill: getPolyfill,
  implementation: implementation,
  shim: shim
});

module.exports = boundFunction;
```