The provided Node.js code defines a module that includes middleware for use with Redux. Specifically, it implements Redux thunk middleware, which allows action creators to return functions instead of plain action objects. This middleware is essential for handling asynchronous operations in a Redux-based application, such as making API calls.

### Functionality:

1. **Custom Utility Functions:**
   - `__defProp`, `__getOwnPropDesc`, `__getOwnPropNames`, and `__hasOwnProp` are utility functions to facilitate property definition and retrieval on objects.
   - `__export` is a utility function used to define properties on the `target` object, making them available for module export.
   - `__copyProps` copies properties from one object to another, optionally excluding certain properties and handling their descriptors.
   - `__toCommonJS` wraps the module's exports to ensure compatibility with both CommonJS and ESModule formats.

2. **Redux Thunk Middleware:**
   - `createThunkMiddleware(extraArgument)` is a function that returns Redux middleware. This middleware checks if an action is a function. If so, it calls the action with `dispatch`, `getState`, and an optional `extraArgument`.
   - `thunk`, a default instance of this middleware, is created without an extra argument.
   - `withExtraArgument` is a reference to `createThunkMiddleware`, allowing the creation of middleware with an extra argument.

3. **Module Export:**
   - The module exports two properties: `thunk` and `withExtraArgument`, using the CommonJS module syntax.

Here is the rewritten code with the same functionality:

```javascript
"use strict";

// Utility functions to facilitate CommonJS and ESM compatibility
const __defProp = Object.defineProperty;
const __getOwnPropDesc = Object.getOwnPropertyDescriptor;
const __getOwnPropNames = Object.getOwnPropertyNames;
const __hasOwnProp = Object.prototype.hasOwnProperty;

// Export utility function
const __export = (target, all) => {
  for (const name in all) {
    __defProp(target, name, { get: all[name], enumerable: true });
  }
};

// Copy properties utility function
const __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (const key of __getOwnPropNames(from)) {
      if (!__hasOwnProp.call(to, key) && key !== except) {
        __defProp(to, key, { 
          get: () => from[key], 
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable 
        });
      }
    }
  }
  return to;
};

// Wrap module for CommonJS
const __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
const src_exports = {};

// Exporting thunk functions
__export(src_exports, {
  thunk: () => thunk,
  withExtraArgument: () => withExtraArgument
});

module.exports = __toCommonJS(src_exports);

// Function to create Redux thunk middleware
function createThunkMiddleware(extraArgument) {
  const middleware = ({ dispatch, getState }) => (next) => (action) => {
    // Check if action is a function
    if (typeof action === "function") {
      // Call the function with dispatch, getState, and extraArgument
      return action(dispatch, getState, extraArgument);
    }
    // Otherwise, continue with the next middleware/action
    return next(action);
  };
  
  return middleware;
}

// Default thunk middleware without extra arguments
const thunk = createThunkMiddleware();

// Middleware factory for custom extra arguments
const withExtraArgument = createThunkMiddleware;

// Annotate the CommonJS export names for ESM import:
0 && (module.exports = {
  thunk,
  withExtraArgument
});
```