The Node.js code is organizing and exporting various components related to WebSocket functionality. Here's the breakdown of the code functionality:

1. **Module Import**: It imports the WebSocket module from a local file located at `./lib/websocket`.

2. **Extending WebSocket Module**:
   - Adds a property `createWebSocketStream` to the WebSocket module by importing it from `./lib/stream`.
   - Adds a property `Server` to represent a WebSocket server, imported from `./lib/websocket-server`.
   - Adds two internal properties `Receiver` and `Sender`, which likely handle receiving and sending of WebSocket messages, from their respective files.

3. **Aliases**:
   - It creates `WebSocket.WebSocket` as an alias to `WebSocket`, allowing users to refer to the WebSocket functionality in different ways.
   - Similarly, `WebSocket.WebSocketServer` is an alias for `WebSocket.Server`.

4. **Exporting the Module**: Finally, the entire `WebSocket` object is exported for use in other parts of the application. This object now includes additional properties and functionalities integrated from separate modules.

```javascript
'use strict';

const WebSocket = require('./lib/websocket');

const createWebSocketStream = require('./lib/stream');
const Server = require('./lib/websocket-server');
const Receiver = require('./lib/receiver');
const Sender = require('./lib/sender');

module.exports = {
  ...WebSocket,
  createWebSocketStream,
  WebSocket: WebSocket,
  Server,
  Receiver,
  Sender,
  WebSocketServer: Server
};
```