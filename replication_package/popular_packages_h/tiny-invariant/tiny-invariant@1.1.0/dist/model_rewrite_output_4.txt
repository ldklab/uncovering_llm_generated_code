The functionality of the given Node.js code is to define an `invariant` function used for asserting a condition in the program. The `invariant` function takes a `condition` and an optional `message`. If the `condition` is false, it will throw an error. The error message is prefixed with 'Invariant failed'. In a production environment, the error message will only contain this prefix, while in other environments, any provided `message` will be appended to the prefix. Additionally, it exports this function as the default export of the module.

Here is a possible rewrite of this Node.js code:

```javascript
'use strict';

Object.defineProperty(exports, "__esModule", { value: true });

const isProduction = process.env.NODE_ENV === 'production';
const PREFIX = 'Invariant failed';

function invariant(condition, message) {
    if (!condition) {
        const errorMessage = isProduction ? PREFIX : `${PREFIX}: ${message || ''}`;
        throw new Error(errorMessage);
    }
}

exports.default = invariant;
```