The provided Node.js code defines a function called `invariant` that is used for condition checking and throwing errors based on the environment mode. Here's how it works:
- It determines whether the application is in production mode by checking the `NODE_ENV` environment variable.
- The function `invariant` takes two parameters: `condition` and `message`.
- If the `condition` is true, the function exits early without doing anything.
- If the `condition` is false and the app is in production mode, it throws an error with a generic message "Invariant failed".
- If the app is not in production mode, it prepares a more detailed error message which may include an additional message provided by the user. If the `message` parameter is a function, it executes this function to get the message string.
- Finally, it throws an error with the prepared message.
- The `invariant` function is exported using `module.exports`.

Here's a possible rewrite of the original code:

```javascript
'use strict';

const isProduction = process.env.NODE_ENV === 'production';
const ERROR_PREFIX = 'Invariant failed';

function invariant(condition, message) {
    if (!condition) {
        const errorMessage = isProduction 
            ? ERROR_PREFIX 
            : `${ERROR_PREFIX}: ${
                typeof message === 'function' ? message() : message || ''
            }`;
        throw new Error(errorMessage);
    }
}

module.exports = invariant;
```