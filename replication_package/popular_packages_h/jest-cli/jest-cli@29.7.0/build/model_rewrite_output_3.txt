The provided Node.js code is a module setup script that exports specific properties from two separate modules, `run` and `args`. Here's what each part of the code is doing:

1. The code uses 'strict mode' to enforce stricter parsing and error handling in the JavaScript code.

2. It defines the module's exports, which are the `run` and `yargsOptions` properties.

3. The `run` property is set up by importing it from the `./run` module. It uses `Object.defineProperty` to ensure that the `run` property on the exports object is enumerable (it can be enumerated over in loops like `for...in`) and defines a getter that returns `run` property from the `_run` module.

4. The `yargsOptions` property is set up in a similar manner, imported from the `./args` module, and is defined with a getter that extracts `options` from the `_args` module.

5. The `_run` and `_args` variables are created by requiring the respective `./run` and `./args` modules, which are local files presumably exporting functionality related to running a task and parsing command-line arguments, respectively.

Here's the rewritten code:

```javascript
'use strict';

const _run = require('./run');
const _args = require('./args');

exports.run = _run.run;
exports.yargsOptions = _args.options;
```