The functionality of the provided Node.js code can be summarized as follows:

1. It imports necessary modules using `require`. These modules are `define-properties`, `call-bind`, and three custom modules (`implementation`, `getPolyfill`, and `shim`).

2. It calls the `getPolyfill` function to retrieve a polyfill, and then uses the `callBind` module to bind this polyfill, storing the result in the `bound` variable.

3. The `define` function from the `define-properties` module is used to define properties on the `bound` object. These properties include:
   - `getPolyfill`: A reference to the `getPolyfill` function.
   - `implementation`: A reference to the `implementation` function.
   - `shim`: A reference to the `shim` function.

4. Finally, it exports the `bound` object as the module's result.

Here's a rewritten version of the same code:

```javascript
'use strict';

const defineProperties = require('define-properties');
const callBind = require('call-bind');

const implementation = require('./implementation');
const polyfill = require('./polyfill');
const shim = require('./shim');

const boundPolyfill = callBind(polyfill());

defineProperties(boundPolyfill, {
  getPolyfill: polyfill,
  implementation: implementation,
  shim: shim
});

module.exports = boundPolyfill;
```