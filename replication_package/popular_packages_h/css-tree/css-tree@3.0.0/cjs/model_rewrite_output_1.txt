The Node.js code provided is defining and exporting various modules and functionalities relating to a syntax processing library or possibly a CSS syntax parser. Let's break down its functionality:

1. **Module Imports**: The code imports several functions and objects from various modules located in different directories. These modules appear to be related to syntax processing and general utility functions.

2. **Core Functionalities**: The code imports a centralized module `index.cjs` found in the `./syntax/` directory. This module (`index$1`) appears to be the core module exposing main functionalities such as `tokenize`, `parse`, `generate`, etc. These functions are critical for syntax related operations such as lexing, parsing, and generating code.

3. **Exported Variables and Functions**:
   - The code exports various functionalities and versions coming from different modules:
     - `version`: Exports the version of the application/library.
     - `createSyntax`, `List`, `Lexer`: These modules provide the mechanisms to create syntax nodes, handle lists, and perform lexical analysis respectively.
     - `definitionSyntax`, `clone`, `isCustomProperty`, etc.: These relate to different aspects of syntax definition and utilities like cloning data structures, identifying custom properties, and more.
   - Major parsing, lexing, and syntax utility functions such as `tokenize`, `parse`, `generate`, `lexer`, and helper methods like `find`, `walk`, are exposed for use.
   
4. **Utilities**: There are additional utilities exported which appear to assist in handling strings, identifiers, URLs, token types, and token names. These utilities provide additional functionalities to support syntax processing.

Below is the rewritten or equivalent format of the given Node.js code:

```javascript
'use strict';

// Importing various modules from different directories for syntax processing
const syntaxIndex = require('./syntax/index.cjs');
const appVersion = require('./version.cjs');
const createSyntax = require('./syntax/create.cjs');
const ListUtil = require('./utils/List.cjs');
const LexerUtil = require('./lexer/Lexer.cjs');
const definitionSyntax = require('./definition-syntax/index.cjs');
const cloneUtil = require('./utils/clone.cjs');
const nameUtils = require('./utils/names.cjs');
const identUtil = require('./utils/ident.cjs');
const stringUtil = require('./utils/string.cjs');
const urlUtil = require('./utils/url.cjs');
const tokenTypes = require('./tokenizer/types.cjs');
const tokenNames = require('./tokenizer/names.cjs');
const TokenStreamUtil = require('./tokenizer/TokenStream.cjs');

// Destructuring core functions from the main syntax module
const {
    tokenize,
    parse,
    generate,
    lexer,
    createLexer,
    walk,
    find,
    findLast,
    findAll,
    toPlainObject,
    fromPlainObject,
    fork
} = syntaxIndex;

// Exporting core functionalities and utilities to be used in syntax processing
exports.version = appVersion.version;
exports.createSyntax = createSyntax;
exports.List = ListUtil.List;
exports.Lexer = LexerUtil.Lexer;
exports.definitionSyntax = definitionSyntax;
exports.clone = cloneUtil.clone;
exports.isCustomProperty = nameUtils.isCustomProperty;
exports.keyword = nameUtils.keyword;
exports.property = nameUtils.property;
exports.vendorPrefix = nameUtils.vendorPrefix;
exports.ident = identUtil;
exports.string = stringUtil;
exports.url = urlUtil;
exports.tokenTypes = tokenTypes;
exports.tokenNames = tokenNames;
exports.TokenStream = TokenStreamUtil.TokenStream;
exports.createLexer = createLexer;
exports.find = find;
exports.findAll = findAll;
exports.findLast = findLast;
exports.fork = fork;
exports.fromPlainObject = fromPlainObject;
exports.generate = generate;
exports.lexer = lexer;
exports.parse = parse;
exports.toPlainObject = toPlainObject;
exports.tokenize = tokenize;
exports.walk = walk;
```