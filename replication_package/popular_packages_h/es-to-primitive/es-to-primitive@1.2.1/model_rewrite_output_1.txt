The Node.js code provided is a module that imports three modules: ES5, ES6, and ES2015 from their respective files. It then attaches the ES5, ES6, and ES2015 modules to the ES2015 object if `Object.defineProperty` is available, using non-enumerable properties so that these properties don't show up in iterations over the object. If `Object.defineProperty` is not available, it attaches these modules to the ES6 object instead as regular properties. Finally, it exports the ES2015 object from the module.

Here is the rewritten code:

```javascript
'use strict';

const ES5 = require('./es5');
const ES6 = require('./es6');
const ES2015 = require('./es2015');

const attachProperties = (target, source) => {
    target.ES5 = source.ES5;
    target.ES6 = source.ES6;
    target.ES2015 = source.ES2015;
};

if (Object.defineProperty) {
    Object.defineProperty(ES2015, 'ES5', { enumerable: false, value: ES5 });
    Object.defineProperty(ES2015, 'ES6', { enumerable: false, value: ES6 });
    Object.defineProperty(ES2015, 'ES2015', { enumerable: false, value: ES2015 });
} else {
    attachProperties(ES6, { ES5, ES6, ES2015 });
}

module.exports = ES2015;
```