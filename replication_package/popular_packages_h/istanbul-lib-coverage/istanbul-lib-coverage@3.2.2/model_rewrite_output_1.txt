The Node.js code provides an API for handling coverage data which includes file coverage, coverage maps, and coverage summaries. The module exports methods for creating instances of `CoverageSummary`, `CoverageMap`, and `FileCoverage`. Each creation method checks if the provided object is an instance of the relevant class. If so, it returns the object directly; otherwise, it creates a new instance using the provided object. Additionally, the module exports the `FileCoverage` class constructor directly for reuse in other parts of an application.

Here's a rewrite of the Node.js code:

```javascript
'use strict';

const { FileCoverage } = require('./lib/file-coverage');
const { CoverageMap } = require('./lib/coverage-map');
const { CoverageSummary } = require('./lib/coverage-summary');

const createCoverageSummary = (obj) => {
    return (obj instanceof CoverageSummary) ? obj : new CoverageSummary(obj);
};

const createCoverageMap = (obj) => {
    return (obj instanceof CoverageMap) ? obj : new CoverageMap(obj);
};

const createFileCoverage = (obj) => {
    return (obj instanceof FileCoverage) ? obj : new FileCoverage(obj);
};

module.exports = {
    createCoverageSummary,
    createCoverageMap,
    createFileCoverage,
    classes: {
        FileCoverage
    }
};
```