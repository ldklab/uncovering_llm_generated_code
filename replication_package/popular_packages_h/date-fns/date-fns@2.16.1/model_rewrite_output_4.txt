The provided Node.js code is an index file used in a module to manage and export a wide array of date-related functions. Each function performs a specific date operation, such as adding or subtracting different time units (days, months, years, etc.), formatting dates, comparing dates, and checking different date properties. 

The code uses `Object.defineProperty` to create configurable and enumerable properties on the `exports` object, each corresponding to a date-related function. Each of these functions is imported from different modules/files named `./add/index.js`, `./addDays/index.js`, `./format/index.js`, etc. These modules are required using the `require` function wrapped in `_interopRequireDefault` to ensure compatibility with modules that have a default export.

The module also imports constants from `./constants/index.js` and exports them unless their keys are `default` or `__esModule`, or if they are already present in the existing list of exports.

Here's a rewritten version of the code:

```javascript
"use strict";

const add = require("./add/index.js").default;
const addBusinessDays = require("./addBusinessDays/index.js").default;
const addDays = require("./addDays/index.js").default;
const addHours = require("./addHours/index.js").default;
const addISOWeekYears = require("./addISOWeekYears/index.js").default;
const addMilliseconds = require("./addMilliseconds/index.js").default;
const addMinutes = require("./addMinutes/index.js").default;
const addMonths = require("./addMonths/index.js").default;
const addQuarters = require("./addQuarters/index.js").default;
const addSeconds = require("./addSeconds/index.js").default;
const addWeeks = require("./addWeeks/index.js").default;
const addYears = require("./addYears/index.js").default;
const areIntervalsOverlapping = require("./areIntervalsOverlapping/index.js").default;
const closestIndexTo = require("./closestIndexTo/index.js").default;
const closestTo = require("./closestTo/index.js").default;
const compareAsc = require("./compareAsc/index.js").default;
const compareDesc = require("./compareDesc/index.js").default;
const differenceInBusinessDays = require("./differenceInBusinessDays/index.js").default;
const differenceInCalendarDays = require("./differenceInCalendarDays/index.js").default;
const differenceInCalendarISOWeekYears = require("./differenceInCalendarISOWeekYears/index.js").default;
const differenceInCalendarISOWeeks = require("./differenceInCalendarISOWeeks/index.js").default;
const differenceInCalendarMonths = require("./differenceInCalendarMonths/index.js").default;
const differenceInCalendarQuarters = require("./differenceInCalendarQuarters/index.js").default;
const differenceInCalendarWeeks = require("./differenceInCalendarWeeks/index.js").default;
const differenceInCalendarYears = require("./differenceInCalendarYears/index.js").default;
const differenceInDays = require("./differenceInDays/index.js").default;
const differenceInHours = require("./differenceInHours/index.js").default;
const differenceInISOWeekYears = require("./differenceInISOWeekYears/index.js").default;
const differenceInMilliseconds = require("./differenceInMilliseconds/index.js").default;
const differenceInMinutes = require("./differenceInMinutes/index.js").default;
const differenceInMonths = require("./differenceInMonths/index.js").default;
const differenceInQuarters = require("./differenceInQuarters/index.js").default;
const differenceInSeconds = require("./differenceInSeconds/index.js").default;
const differenceInWeeks = require("./differenceInWeeks/index.js").default;
const differenceInYears = require("./differenceInYears/index.js").default;
const eachDayOfInterval = require("./eachDayOfInterval/index.js").default;
const eachHourOfInterval = require("./eachHourOfInterval/index.js").default;
const eachMonthOfInterval = require("./eachMonthOfInterval/index.js").default;
const eachQuarterOfInterval = require("./eachQuarterOfInterval/index.js").default;
const eachWeekOfInterval = require("./eachWeekOfInterval/index.js").default;
const eachWeekendOfInterval = require("./eachWeekendOfInterval/index.js").default;
const eachWeekendOfMonth = require("./eachWeekendOfMonth/index.js").default;
const eachWeekendOfYear = require("./eachWeekendOfYear/index.js").default;
const eachYearOfInterval = require("./eachYearOfInterval/index.js").default;
const endOfDay = require("./endOfDay/index.js").default;
const endOfDecade = require("./endOfDecade/index.js").default;
const endOfHour = require("./endOfHour/index.js").default;
const endOfISOWeek = require("./endOfISOWeek/index.js").default;
const endOfISOWeekYear = require("./endOfISOWeekYear/index.js").default;
const endOfMinute = require("./endOfMinute/index.js").default;
const endOfMonth = require("./endOfMonth/index.js").default;
const endOfQuarter = require("./endOfQuarter/index.js").default;
const endOfSecond = require("./endOfSecond/index.js").default;
const endOfToday = require("./endOfToday/index.js").default;
const endOfTomorrow = require("./endOfTomorrow/index.js").default;
const endOfWeek = require("./endOfWeek/index.js").default;
const endOfYear = require("./endOfYear/index.js").default;
const endOfYesterday = require("./endOfYesterday/index.js").default;
const format = require("./format/index.js").default;
const formatDistance = require("./formatDistance/index.js").default;
const formatDistanceStrict = require("./formatDistanceStrict/index.js").default;
const formatDistanceToNow = require("./formatDistanceToNow/index.js").default;
const formatDistanceToNowStrict = require("./formatDistanceToNowStrict/index.js").default;
const formatDuration = require("./formatDuration/index.js").default;
const formatISO = require("./formatISO/index.js").default;
const formatISO9075 = require("./formatISO9075/index.js").default;
const formatISODuration = require("./formatISODuration/index.js").default;
const formatRFC3339 = require("./formatRFC3339/index.js").default;
const formatRFC7231 = require("./formatRFC7231/index.js").default;
const formatRelative = require("./formatRelative/index.js").default;
const fromUnixTime = require("./fromUnixTime/index.js").default;
const getDate = require("./getDate/index.js").default;
const getDay = require("./getDay/index.js").default;
const getDayOfYear = require("./getDayOfYear/index.js").default;
const getDaysInMonth = require("./getDaysInMonth/index.js").default;
const getDaysInYear = require("./getDaysInYear/index.js").default;
const getDecade = require("./getDecade/index.js").default;
const getHours = require("./getHours/index.js").default;
const getISODay = require("./getISODay/index.js").default;
const getISOWeek = require("./getISOWeek/index.js").default;
const getISOWeekYear = require("./getISOWeekYear/index.js").default;
const getISOWeeksInYear = require("./getISOWeeksInYear/index.js").default;
const getMilliseconds = require("./getMilliseconds/index.js").default;
const getMinutes = require("./getMinutes/index.js").default;
const getMonth = require("./getMonth/index.js").default;
const getOverlappingDaysInIntervals = require("./getOverlappingDaysInIntervals/index.js").default;
const getQuarter = require("./getQuarter/index.js").default;
const getSeconds = require("./getSeconds/index.js").default;
const getTime = require("./getTime/index.js").default;
const getUnixTime = require("./getUnixTime/index.js").default;
const getWeek = require("./getWeek/index.js").default;
const getWeekOfMonth = require("./getWeekOfMonth/index.js").default;
const getWeekYear = require("./getWeekYear/index.js").default;
const getWeeksInMonth = require("./getWeeksInMonth/index.js").default;
const getYear = require("./getYear/index.js").default;
const intervalToDuration = require("./intervalToDuration/index.js").default;
const isAfter = require("./isAfter/index.js").default;
const isBefore = require("./isBefore/index.js").default;
const isDate = require("./isDate/index.js").default;
const isEqual = require("./isEqual/index.js").default;
const isExists = require("./isExists/index.js").default;
const isFirstDayOfMonth = require("./isFirstDayOfMonth/index.js").default;
const isFriday = require("./isFriday/index.js").default;
const isFuture = require("./isFuture/index.js").default;
const isLastDayOfMonth = require("./isLastDayOfMonth/index.js").default;
const isLeapYear = require("./isLeapYear/index.js").default;
const isMatch = require("./isMatch/index.js").default;
const isMonday = require("./isMonday/index.js").default;
const isPast = require("./isPast/index.js").default;
const isSameDay = require("./isSameDay/index.js").default;
const isSameHour = require("./isSameHour/index.js").default;
const isSameISOWeek = require("./isSameISOWeek/index.js").default;
const isSameISOWeekYear = require("./isSameISOWeekYear/index.js").default;
const isSameMinute = require("./isSameMinute/index.js").default;
const isSameMonth = require("./isSameMonth/index.js").default;
const isSameQuarter = require("./isSameQuarter/index.js").default;
const isSameSecond = require("./isSameSecond/index.js").default;
const isSameWeek = require("./isSameWeek/index.js").default;
const isSameYear = require("./isSameYear/index.js").default;
const isSaturday = require("./isSaturday/index.js").default;
const isSunday = require("./isSunday/index.js").default;
const isThisHour = require("./isThisHour/index.js").default;
const isThisISOWeek = require("./isThisISOWeek/index.js").default;
const isThisMinute = require("./isThisMinute/index.js").default;
const isThisMonth = require("./isThisMonth/index.js").default;
const isThisQuarter = require("./isThisQuarter/index.js").default;
const isThisSecond = require("./isThisSecond/index.js").default;
const isThisWeek = require("./isThisWeek/index.js").default;
const isThisYear = require("./isThisYear/index.js").default;
const isThursday = require("./isThursday/index.js").default;
const isToday = require("./isToday/index.js").default;
const isTomorrow = require("./isTomorrow/index.js").default;
const isTuesday = require("./isTuesday/index.js").default;
const isValid = require("./isValid/index.js").default;
const isWednesday = require("./isWednesday/index.js").default;
const isWeekend = require("./isWeekend/index.js").default;
const isWithinInterval = require("./isWithinInterval/index.js").default;
const isYesterday = require("./isYesterday/index.js").default;
const lastDayOfDecade = require("./lastDayOfDecade/index.js").default;
const lastDayOfISOWeek = require("./lastDayOfISOWeek/index.js").default;
const lastDayOfISOWeekYear = require("./lastDayOfISOWeekYear/index.js").default;
const lastDayOfMonth = require("./lastDayOfMonth/index.js").default;
const lastDayOfQuarter = require("./lastDayOfQuarter/index.js").default;
const lastDayOfWeek = require("./lastDayOfWeek/index.js").default;
const lastDayOfYear = require("./lastDayOfYear/index.js").default;
const lightFormat = require("./lightFormat/index.js").default;
const max = require("./max/index.js").default;
const min = require("./min/index.js").default;
const parse = require("./parse/index.js").default;
const parseISO = require("./parseISO/index.js").default;
const parseJSON = require("./parseJSON/index.js").default;
const roundToNearestMinutes = require("./roundToNearestMinutes/index.js").default;
const set = require("./set/index.js").default;
const setDate = require("./setDate/index.js").default;
const setDay = require("./setDay/index.js").default;
const setDayOfYear = require("./setDayOfYear/index.js").default;
const setHours = require("./setHours/index.js").default;
const setISODay = require("./setISODay/index.js").default;
const setISOWeek = require("./setISOWeek/index.js").default;
const setISOWeekYear = require("./setISOWeekYear/index.js").default;
const setMilliseconds = require("./setMilliseconds/index.js").default;
const setMinutes = require("./setMinutes/index.js").default;
const setMonth = require("./setMonth/index.js").default;
const setQuarter = require("./setQuarter/index.js").default;
const setSeconds = require("./setSeconds/index.js").default;
const setWeek = require("./setWeek/index.js").default;
const setWeekYear = require("./setWeekYear/index.js").default;
const setYear = require("./setYear/index.js").default;
const startOfDay = require("./startOfDay/index.js").default;
const startOfDecade = require("./startOfDecade/index.js").default;
const startOfHour = require("./startOfHour/index.js").default;
const startOfISOWeek = require("./startOfISOWeek/index.js").default;
const startOfISOWeekYear = require("./startOfISOWeekYear/index.js").default;
const startOfMinute = require("./startOfMinute/index.js").default;
const startOfMonth = require("./startOfMonth/index.js").default;
const startOfQuarter = require("./startOfQuarter/index.js").default;
const startOfSecond = require("./startOfSecond/index.js").default;
const startOfToday = require("./startOfToday/index.js").default;
const startOfTomorrow = require("./startOfTomorrow/index.js").default;
const startOfWeek = require("./startOfWeek/index.js").default;
const startOfWeekYear = require("./startOfWeekYear/index.js").default;
const startOfYear = require("./startOfYear/index.js").default;
const startOfYesterday = require("./startOfYesterday/index.js").default;
const sub = require("./sub/index.js").default;
const subBusinessDays = require("./subBusinessDays/index.js").default;
const subDays = require("./subDays/index.js").default;
const subHours = require("./subHours/index.js").default;
const subISOWeekYears = require("./subISOWeekYears/index.js").default;
const subMilliseconds = require("./subMilliseconds/index.js").default;
const subMinutes = require("./subMinutes/index.js").default;
const subMonths = require("./subMonths/index.js").default;
const subQuarters = require("./subQuarters/index.js").default;
const subSeconds = require("./subSeconds/index.js").default;
const subWeeks = require("./subWeeks/index.js").default;
const subYears = require("./subYears/index.js").default;
const toDate = require("./toDate/index.js").default;

const constants = require("./constants/index.js");

Object.keys(constants).forEach((key) => {
  if (key !== "default" && key !== "__esModule") {
    exports[key] = constants[key];
  }
});

module.exports = {
  add, addBusinessDays, addDays, addHours, addISOWeekYears, addMilliseconds, addMinutes, addMonths, addQuarters, addSeconds, addWeeks, addYears,
  areIntervalsOverlapping, closestIndexTo, closestTo, compareAsc, compareDesc, differenceInBusinessDays, differenceInCalendarDays, differenceInCalendarISOWeekYears, differenceInCalendarISOWeeks, 
  differenceInCalendarMonths, differenceInCalendarQuarters, differenceInCalendarWeeks, differenceInCalendarYears, differenceInDays, differenceInHours, differenceInISOWeekYears, 
  differenceInMilliseconds, differenceInMinutes, differenceInMonths, differenceInQuarters, differenceInSeconds, differenceInWeeks, differenceInYears, eachDayOfInterval, 
  eachHourOfInterval, eachMonthOfInterval, eachQuarterOfInterval, eachWeekOfInterval, eachWeekendOfInterval, eachWeekendOfMonth, eachWeekendOfYear, eachYearOfInterval, 
  endOfDay, endOfDecade, endOfHour, endOfISOWeek, endOfISOWeekYear, endOfMinute, endOfMonth, endOfQuarter, endOfSecond, endOfToday, endOfTomorrow, endOfWeek, 
  endOfYear, endOfYesterday, format, formatDistance, formatDistanceStrict, formatDistanceToNow, formatDistanceToNowStrict, formatDuration, formatISO, formatISO9075, formatISODuration, 
  formatRFC3339, formatRFC7231, formatRelative, fromUnixTime, getDate, getDay, getDayOfYear, getDaysInMonth, getDaysInYear, getDecade, getHours, getISODay, getISOWeek, 
  getISOWeekYear, getISOWeeksInYear, getMilliseconds, getMinutes, getMonth, getOverlappingDaysInIntervals, getQuarter, getSeconds, getTime, getUnixTime, getWeek, getWeekOfMonth, 
  getWeekYear, getWeeksInMonth, getYear, intervalToDuration, isAfter, isBefore, isDate, isEqual, isExists, isFirstDayOfMonth, isFriday, isFuture, isLastDayOfMonth, 
  isLeapYear, isMatch, isMonday, isPast, isSameDay, isSameHour, isSameISOWeek, isSameISOWeekYear, isSameMinute, isSameMonth, isSameQuarter, isSameSecond, isSameWeek, 
  isSameYear, isSaturday, isSunday, isThisHour, isThisISOWeek, isThisMinute, isThisMonth, isThisQuarter, isThisSecond, isThisWeek, isThisYear, isThursday, isToday, 
  isTomorrow, isTuesday, isValid, isWednesday, isWeekend, isWithinInterval, isYesterday, lastDayOfDecade, lastDayOfISOWeek, lastDayOfISOWeekYear, lastDayOfMonth, 
  lastDayOfQuarter, lastDayOfWeek, lastDayOfYear, lightFormat, max, min, parse, parseISO, parseJSON, roundToNearestMinutes, set, setDate, setDay, setDayOfYear, setHours, 
  setISODay, setISOWeek, setISOWeekYear, setMilliseconds, setMinutes, setMonth, setQuarter, setSeconds, setWeek, setWeekYear, setYear, startOfDay, startOfDecade, 
  startOfHour, startOfISOWeek, startOfISOWeekYear, startOfMinute, startOfMonth, startOfQuarter, startOfSecond, startOfToday, startOfTomorrow, startOfWeek, startOfWeekYear, 
  startOfYear, startOfYesterday, sub, subBusinessDays, subDays, subHours, subISOWeekYears, subMilliseconds, subMinutes, subMonths, subQuarters, subSeconds, subWeeks, 
  subYears, toDate, ...constants
};
```
