The functionality of the provided Node.js code is to set up exports for a module, specifically exporting functions from other modules and handling how they are made available from this module. The code is utilizing some helper functions to manage these exports.

1. `__createBinding`: A helper function that helps in creating bindings (or links) between the module (`m`) and the exports object (`o`). It binds exports in a way that respects property descriptors (such as `enumerable`).

2. `__exportStar`: Another helper function that exports all non-default exports from a module `m` to the `exports` object.

3. `__importDefault`: A helper function used to import the default export from a module and return it in a consistent format.

In the specific context of the code:

- The module exports everything from the module `./parse` using `__exportStar`.

- It imports and references the default export from `./parse` and renames it to `parse`, and this is exported.

- Similarly, it imports and references the default export from `./stringify` and names it `stringify`, which is also exported.

Here's the rewritten code with these explanations in mind:

```javascript
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.stringify = exports.parse = void 0;

const parseModule = require("./parse");
const parse = parseModule.default;
exports.parse = parse;

const stringifyModule = require("./stringify");
const stringify = stringifyModule.default;
exports.stringify = stringify;

Object.keys(parseModule).forEach(key => {
    if (key !== "default" && !Object.prototype.hasOwnProperty.call(exports, key)) {
        exports[key] = parseModule[key];
    }
});
```
