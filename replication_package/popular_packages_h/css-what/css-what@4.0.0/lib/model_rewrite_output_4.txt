The given Node.js code is a module that manages the export of functions and other module members. It includes polyfills for `__createBinding`, `__exportStar`, and `__importDefault`, which are used to simulate ECMAScript module behaviors in environments that do not natively support them.

1. `__createBinding`: Facilitates the binding of a module property to an object, like an exports object, and ensures the property is enumerable.
2. `__exportStar`: Re-exports all properties from a module, except for the default member, to another exports-like object.
3. `__importDefault`: Used to handle the import of the default export from a module, supporting CommonJS-style imports.

The module explicitly exports two functions, `parse` and `stringify`, from their respective modules (`./parse` and `./stringify`). The `parse` function is imported as a default export using `__importDefault`, while all exports from `./parse` are also re-exported using `__exportStar`.

Here's the rewritten code:

```javascript
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });

const parseModule = require("./parse");
const stringifyModule = require("./stringify");

exports.parse = parseModule.default;
exports.stringify = stringifyModule.default;

for (let key in parseModule) {
    if (key !== "default" && !Object.prototype.hasOwnProperty.call(exports, key)) {
        Object.defineProperty(exports, key, {
            enumerable: true,
            get: () => parseModule[key],
        });
    }
}
```