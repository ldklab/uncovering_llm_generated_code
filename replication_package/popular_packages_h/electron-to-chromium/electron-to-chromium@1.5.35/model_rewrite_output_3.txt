The given Node.js code provides a module that allows conversion between Electron versions and Chromium versions. It imports four data files presumably containing mapping data between version numbers for Electron and Chromium. The functionality is as follows:

1. `electronToChromium(query)`: Converts an Electron version to the corresponding Chromium version. It uses a version number string and checks against a detailed (`fullVersions`) or basic (`versions`) list depending on the format of the input.

2. `chromiumToElectron(query)`: Converts a Chromium version to the corresponding Electron version, utilizing either a detailed (`fullChromiumVersions`) or basic (`chromiumVersions`) list, similar to the Electron to Chromium conversion function.

3. `electronToBrowserList(query)`: Converts an Electron version to a string in the format "Chrome >= <version>", suitable for use in browser compatibility lists, specifically utilizing the `versions` mapping.

4. `getQueryString(query)`: A helper function to standardize the format of the query input, ensuring it is a string in the format required for lookups, converting numbers and specific cases like `1` to a string.

The module exports these conversion functions along with the version data mappings (`versions`, `fullVersions`, `chromiumVersions`, `fullChromiumVersions`).

Here's a rewrite of the code:

```javascript
const versions = require('./versions');
const fullVersions = require('./full-versions');
const chromiumVersions = require('./chromium-versions');
const fullChromiumVersions = require('./full-chromium-versions');

function getQueryString(query) {
  let number = query;
  if (query === 1) number = "1.0";
  if (typeof query === 'number') number = query.toString();
  return number;
}

function electronToChromium(query) {
  const number = getQueryString(query);
  return number.includes('.') && number.split('.').length > 2 ? 
    fullVersions[number] : 
    versions[number] || undefined;
}

function chromiumToElectron(query) {
  const number = getQueryString(query);
  return number.includes('.') && number.split('.').length > 2 ? 
    fullChromiumVersions[number] : 
    chromiumVersions[number] || undefined;
}

function electronToBrowserList(query) {
  const number = getQueryString(query);
  return versions[number] ? `Chrome >= ${versions[number]}` : undefined;
}

module.exports = {
  versions,
  fullVersions,
  chromiumVersions,
  fullChromiumVersions,
  electronToChromium,
  electronToBrowserList,
  chromiumToElectron
};
```