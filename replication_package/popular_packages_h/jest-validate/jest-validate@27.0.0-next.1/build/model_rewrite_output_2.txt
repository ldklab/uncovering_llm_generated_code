The Node.js code is a module that exports several members from other modules, specifically utilities and functions related to validation. Hereâ€™s a breakdown of its functionality:

1. **Module Exports**: The code defines multiple properties on the `exports` object. These properties are exported for other modules to use.

2. **Properties and Functions Exported**:
   - `ValidationError`, `createDidYouMeanMessage`, `format`, `logValidationWarning`, `multipleValidOptions`: These are exported from a module named `utils`.
   - `validate`: Exported from a module named `validate`.
   - `validateCLIOptions`: Exported from a module named `validateCLIOptions`.

3. **Interop Handling**: The `_interopRequireDefault` function ensures compatibility with both CommonJS and ES module formats. It returns the default export of a module if it is using ES modules, otherwise returns the module itself.

4. **Modules Imported**:
   - `utils`: A module providing several utilities or helper functions.
   - `validate` & `validateCLIOptions`: Specific validation-related modules.
   - `condition`: A module that may contain configuration or conditional logic utilities.

The code is organized to ensure each utility or function is accessible by other parts of an application, while also handling ES module defaults gracefully.

Below is a rewritten version of the provided Node.js code:

```javascript
'use strict';

import * as _utils from './utils';
import validateDefault from './validate';
import validateCLIOptionsDefault from './validateCLIOptions';
import * as _condition from './condition';

export const ValidationError = _utils.ValidationError;
export const createDidYouMeanMessage = _utils.createDidYouMeanMessage;
export const format = _utils.format;
export const logValidationWarning = _utils.logValidationWarning;
export const validate = validateDefault;
export const validateCLIOptions = validateCLIOptionsDefault;
export const multipleValidOptions = _condition.multipleValidOptions;
```