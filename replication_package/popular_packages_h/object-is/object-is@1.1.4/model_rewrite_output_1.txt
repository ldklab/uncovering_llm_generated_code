The functionality of the original Node.js code is to define a module that integrates a polyfill with additional properties and exports it. It involves several key steps:

1. **Import Necessary Modules:** It imports essential functions and helpers like `define-properties`, `call-bind`, `implementation`, `polyfill`, and `shim`.

2. **Bind Polyfill Function:** It uses `call-bind` to bind the polyfill to the `Object` context.

3. **Enhance Polyfill Object:** The `define` function is used to add extra properties and functions (`getPolyfill`, `implementation`, and `shim`) to the `polyfill` object.

4. **Export the Polyfill:** Finally, the enhanced `polyfill` object is exported as a module.

Here is the rewritten code:

```javascript
'use strict';

const defineProperties = require('define-properties');
const callBind = require('call-bind');

const implementation = require('./implementation');
const getPolyfill = require('./polyfill');
const shim = require('./shim');

const boundPolyfill = callBind(getPolyfill(), Object);

defineProperties(boundPolyfill, {
  getPolyfill,
  implementation,
  shim
});

module.exports = boundPolyfill;
```