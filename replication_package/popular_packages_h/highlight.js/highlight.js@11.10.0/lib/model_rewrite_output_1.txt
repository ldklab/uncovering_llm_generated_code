The provided Node.js code is used to initialize and configure a syntax highlighting library called `highlight.js`. The functionality of this code can be summarized as follows:

1. **Import Core Library**: It imports a core module for `highlight.js` using `require('./core')`.

2. **Register Languages**: The code registers multiple programming languages supported by `highlight.js` by requiring each language module from a file path like `'./languages/<language_name>'`. Each language module is incorporated using the `registerLanguage` method of `hljs`.

3. **Export hljs**: Finally, the `hljs` instance (which presumably contains the core `highlight.js` functionality and the registered languages) is set as a property of itself (`HighlightJS` and `default`) and is exported for use in other parts of an application.

The purpose of this code structure is to enable syntax highlighting for a variety of programming languages by dynamically registering language definitions with the core highlighting functionality, allowing `highlight.js` to process various language syntaxes and style them accordingly.

Here is a possible rewrite of the Node.js code:

```javascript
const fs = require('fs');
const hljs = require('./core');

// Read all language files from the 'languages' directory
const languageFiles = fs.readdirSync('./languages');

// Register each language automatically
languageFiles.forEach(file => {
  const language = file.replace('.js', '');
  hljs.registerLanguage(language, require(`./languages/${language}`));
});

// Set up exports
hljs.HighlightJS = hljs;
hljs.default = hljs;
module.exports = hljs;
```