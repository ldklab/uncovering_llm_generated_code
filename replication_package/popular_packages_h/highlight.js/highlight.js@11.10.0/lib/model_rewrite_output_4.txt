The given Node.js code is meant to set up the `highlight.js` library, which is used for syntax highlighting of code blocks in various programming languages. The `highlight.js` library has a core functionality that can be extended by registering individual languages, which is exactly what this code does.

Here's a step-by-step breakdown of the code's functionality:

1. **Import and Setup:** It starts by importing the core module of `highlight.js` using `require('./core')`.

2. **Register Languages:** It uses the `registerLanguage` method of the `hljs` object to add support for various programming languages. For each language, it requires the corresponding module from the `./languages/` directory.

3. **Exports:** Finally, it exports the configured `hljs` object so it can be used in other parts of the application or by other modules. Additionally, it assigns `hljs` to the `HighlightJS` and `default` properties of `hljs` to provide compatibility with different module systems.

Here is a possible rewrite of the given Node.js code:

```javascript
const hljs = require('./core');

// List of languages to register
const languages = [
  '1c', 'abnf', 'accesslog', 'actionscript', 'ada', 'angelscript', 'apache', 'applescript', 
  'arcade', 'arduino', 'armasm', 'xml', 'asciidoc', 'aspectj', 'autohotkey', 'autoit', 'avrasm',
  'awk', 'axapta', 'bash', 'basic', 'bnf', 'brainfuck', 'c', 'cal', 'capnproto', 'ceylon', 
  'clean', 'clojure', 'clojure-repl', 'cmake', 'coffeescript', 'coq', 'cos', 'cpp', 'crmsh', 
  'crystal', 'csharp', 'csp', 'css', 'd', 'markdown', 'dart', 'delphi', 'diff', 'django', 'dns', 
  'dockerfile', 'dos', 'dsconfig', 'dts', 'dust', 'ebnf', 'elixir', 'elm', 'ruby', 'erb', 
  'erlang-repl', 'erlang', 'excel', 'fix', 'flix', 'fortran', 'fsharp', 'gams', 'gauss', 'gcode', 
  'gherkin', 'glsl', 'gml', 'go', 'golo', 'gradle', 'graphql', 'groovy', 'haml', 'handlebars', 
  'haskell', 'haxe', 'hsp', 'http', 'hy', 'inform7', 'ini', 'irpf90', 'isbl', 'java', 
  'javascript', 'jboss-cli', 'json', 'julia', 'julia-repl', 'kotlin', 'lasso', 'latex', 'ldif', 
  'leaf', 'less', 'lisp', 'livecodeserver', 'livescript', 'llvm', 'lsl', 'lua', 'makefile', 
  'mathematica', 'matlab', 'maxima', 'mel', 'mercury', 'mipsasm', 'mizar', 'perl', 'mojolicious', 
  'monkey', 'moonscript', 'n1ql', 'nestedtext', 'nginx', 'nim', 'nix', 'node-repl', 'nsis', 
  'objectivec', 'ocaml', 'openscad', 'oxygene', 'parser3', 'pf', 'pgsql', 'php', 'php-template', 
  'plaintext', 'pony', 'powershell', 'processing', 'profile', 'prolog', 'properties', 'protobuf', 
  'puppet', 'purebasic', 'python', 'python-repl', 'q', 'qml', 'r', 'reasonml', 'rib', 'roboconf', 
  'routeros', 'rsl', 'ruleslanguage', 'rust', 'sas', 'scala', 'scheme', 'scilab', 'scss', 'shell', 
  'smali', 'smalltalk', 'sml', 'sqf', 'sql', 'stan', 'stata', 'step21', 'stylus', 'subunit', 'swift', 
  'taggerscript', 'yaml', 'tap', 'tcl', 'thrift', 'tp', 'twig', 'typescript', 'vala', 'vbnet', 
  'vbscript', 'vbscript-html', 'verilog', 'vhdl', 'vim', 'wasm', 'wren', 'x86asm', 'xl', 'xquery', 
  'zephir'
];

// Register each language
languages.forEach(lang => {
  hljs.registerLanguage(lang, require(`./languages/${lang}`));
});

// Export the configured hljs
hljs.HighlightJS = hljs;
hljs.default = hljs;
module.exports = hljs;
```