The provided Node.js code defines a Babel plugin that enables parsing of class properties, including public, private, and private methods within classes, when integrated into a Babel setup. It uses the `@babel/helper-plugin-utils` to declare a Babel plugin. The plugin checks if the API version is 7 or above, and modifies the parser options by adding support for `classProperties`, `classPrivateProperties`, and `classPrivateMethods` plugins, which facilitate the parsing of modern JavaScript syntax features related to class property declarations.

Here's the rewritten version of the code:

```javascript
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

const { declare } = require("@babel/helper-plugin-utils");

const myPlugin = declare(api => {
  api.assertVersion(7);
  return {
    name: "syntax-class-properties",
    manipulateOptions(opts, parserOptions) {
      parserOptions.plugins.push("classProperties", "classPrivateProperties", "classPrivateMethods");
    }
  };
});

exports.default = myPlugin;
```