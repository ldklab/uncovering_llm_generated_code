The Node.js code provided is using the ES6 module system to export specific functions from two modules: `identifier` and `keyword`. It is creating named exports by defining properties on the `exports` object and associating them with functions imported from these modules. The properties are specified to be enumerable, ensuring they can be iterated over. The following functions are being exported:

1. `isIdentifierName` - A function imported from the `identifier` module.
2. `isIdentifierChar` - A function imported from the `identifier` module.
3. `isIdentifierStart` - A function imported from the `identifier` module.
4. `isReservedWord` - A function imported from the `keyword` module.
5. `isStrictBindOnlyReservedWord` - A function imported from the `keyword` module.
6. `isStrictBindReservedWord` - A function imported from the `keyword` module.
7. `isStrictReservedWord` - A function imported from the `keyword` module.
8. `isKeyword` - A function imported from the `keyword` module.

Here is a rewritten version of the same functionality using ES6 export/import syntax:

```javascript
"use strict";

import { 
  isIdentifierName, 
  isIdentifierChar, 
  isIdentifierStart 
} from "./identifier";

import { 
  isReservedWord, 
  isStrictBindOnlyReservedWord, 
  isStrictBindReservedWord, 
  isStrictReservedWord, 
  isKeyword 
} from "./keyword";

export {
  isIdentifierName,
  isIdentifierChar,
  isIdentifierStart,
  isReservedWord,
  isStrictBindOnlyReservedWord,
  isStrictBindReservedWord,
  isStrictReservedWord,
  isKeyword
};
```