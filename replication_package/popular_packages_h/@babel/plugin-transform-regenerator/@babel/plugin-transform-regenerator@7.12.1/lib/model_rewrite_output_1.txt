The given Node.js code is leveraging JavaScript's module system to export a default property from the `regenerator-transform` package. It is using the `interopRequireDefault` function to ensure compatibility between CommonJS and ES Modules, allowing the `default` export of `regenerator-transform` to be accessed correctly in both environments.

The functionality can be broken down as follows:
1. `Object.defineProperty` is used to define a property on the `exports` object with the key `default`.
2. The property is set to be enumerable, meaning it can be included in object properties enumerations.
3. The `get` method of the defined property returns the `default` export from the imported `_regeneratorTransform` module.
4. The `_interopRequireDefault` function checks whether the module `obj` (in this case, `regenerator-transform`) has a property `__esModule` set to true. If so, it assumes the module is an ES Module and returns `obj` directly. Otherwise, it wraps `obj` in an object with a `default` key pointing to `obj`.

This allows the use of the `regenerator-transform` module in a manner consistent with the ES6 `import` statement, providing the flexibility to work in both CommonJS and ES Module environments.

Here is a rewritten version of the code with the same functionality:

```javascript
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regeneratorTransform = _interopRequireDefault(require("regenerator-transform"));

function _interopRequireDefault(obj) { 
  return obj && obj.__esModule ? obj : { default: obj }; 
}

var _default = _regeneratorTransform.default;
exports.default = _default;
```