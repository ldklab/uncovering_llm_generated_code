The functionality of the Node.js code is to create a higher-order function called `regexTester`, which takes a regular expression (`regex`) as an argument. It first checks whether the provided argument is a valid RegExp object using the `is-regex` package. If it is not, it throws a TypeError. If the argument is a valid RegExp object, the function returns another function, `test`, which takes a string (`s`) and uses `RegExp.prototype.exec` to test if the `regex` matches some part of the string `s`. The `test` function returns `true` if there's a match (i.e., the `exec` method does not return `null`), otherwise it returns `false`.

```javascript
'use strict';

var callBound = require('call-bind/callBound');
var isRegex = require('is-regex');

var $exec = callBound('RegExp.prototype.exec');
var $TypeError = require('es-errors/type');

module.exports = function regexTester(regex) {
	if (!isRegex(regex)) {
		throw new $TypeError('`regex` must be a RegExp');
	}
	return function test(s) {
		return $exec(regex, s) !== null;
	};
};
```