The functionality of this Node.js code is to export a function called `regexTester`. This function takes a regular expression as an argument, validates it, and returns another function `test`. This `test` function takes a string as an argument and tests it against the provided regular expression, returning `true` if the string matches the pattern and `false` otherwise. The code uses modules `call-bind` to correctly call `RegExp.prototype.exec` and `is-regex` to verify if the input is a regex. It also uses `es-errors` to create a custom error type for invalid input.

```javascript
'use strict';

let callBound = require('call-bind/callBound');
let isRegex = require('is-regex');

let execRegex = callBound('RegExp.prototype.exec');
let TypeErrorCustom = require('es-errors/type');

module.exports = function createRegexTester(pattern) {
    if (!isRegex(pattern)) {
        throw new TypeErrorCustom('The provided argument must be a RegExp');
    }
    return function performsTestOnString(string) {
        return execRegex(pattern, string) !== null;
    };
};
```