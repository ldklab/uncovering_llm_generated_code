The Node.js code exports a function named `isNegativeZero`. This function takes one argument, `number`, and returns a boolean indicating whether the argument is the value "negative zero" in JavaScript.

In JavaScript, there are two representations of zero: +0 and -0. They are generally considered equal when compared directly. However, they can be distinguished using division, as dividing 1 by negative zero returns negative infinity (`-Infinity`), while dividing by positive zero returns positive infinity (`Infinity`).

Here's how the function works:
- First, it checks if the `number` is equal to 0.
- Then, it checks if dividing 1 by `number` results in `-Infinity`.
- If both conditions are true, the function returns `true`, indicating that the number is indeed negative zero. Otherwise, it returns `false`.

Here is the rewritten code:

```javascript
'use strict';

function isNegativeZero(number) {
    return number === 0 && (1 / number) === -Infinity;
}

module.exports = isNegativeZero;
```