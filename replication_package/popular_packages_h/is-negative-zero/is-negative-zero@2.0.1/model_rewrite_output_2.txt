The functionality of the Node.js code is to export a function called `isNegativeZero`. This function takes a `number` as an input and checks if it is specifically `-0` (negative zero). In JavaScript, positive zero (`+0`) and negative zero (`-0`) are treated as equal when compared using the strict equality operator (`===`). Thus, a secondary check is needed to differentiate them. The function does this differentiation by checking the value of `1 / number`. If the number is positive zero, `1 / number` equals `+Infinity`; if it is negative zero, `1 / number` equals `-Infinity`. The function returns `true` if the input number is negative zero, and `false` otherwise.

Here's the rewritten code:

```js
'use strict';

module.exports = function isNegativeZero(number) {
    // Check if the number is zero and dividing 1 by the number yields -Infinity
    return number === 0 && (1 / number) === -Infinity;
};
```