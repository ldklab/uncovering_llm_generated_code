The provided Node.js code consists of two functions: `normalize` and `urlJoin`.

- The `normalize` function takes an array of strings (`strArray`) as input, processes it to form a well-formatted URL string, and handles different protocols and path components. It ensures that:
  - The first component, if a protocol, is combined with the next part.
  - The URL has the correct number of slashes according to protocol rules (e.g., file protocol).
  - Each component is separated by a single slash.
  - Trailing slashes are removed if followed by parameters or hash.
  - The `?` in parameters is replaced with `&` to maintain the correct format.
- The `urlJoin` function serves as an external interface. It accepts a list of URL parts either directly or as an object, processes it using `normalize`, and returns a normalized URL string.

```javascript
function normalize(strArray) {
  const resultArray = [];
  
  if (strArray.length === 0) return '';

  if (typeof strArray[0] !== 'string') {
    throw new TypeError('Url must be a string. Received ' + strArray[0]);
  }

  if (strArray[0].match(/^[^/:]+:\/*$/) && strArray.length > 1) {
    const first = strArray.shift();
    strArray[0] = first + strArray[0];
  }

  if (strArray[0].match(/^file:\/\/\//)) {
    strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, '$1:///');
  } else {
    strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, '$1://');
  }

  strArray.forEach((component, index) => {
    if (typeof component !== 'string') {
      throw new TypeError('Url must be a string. Received ' + component);
    }

    if (component === '') return;

    if (index > 0) {
      component = component.replace(/^[\/]+/, '');
    }
    
    if (index < strArray.length - 1) {
      component = component.replace(/[\/]+$/, '');
    } else {
      component = component.replace(/[\/]+$/, '/');
    }

    resultArray.push(component);
  });

  let str = resultArray.join('/');
  
  str = str.replace(/\/(\?|&|#[^!])/g, '$1');

  const parts = str.split('?');
  str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');

  return str;
}

export default function urlJoin(...args) {
  const input = (typeof args[0] === 'object') ? args[0] : args;
  return normalize(input);
}
```