The given Node.js code is an ES Module that imports functions from various modules and then re-exports them for use in other parts of the application. The `exports` statement allows these functions to be used after being imported by other modules. Specifically, the code imports `createMatchPath` and `matchFromAbsolutePaths` from a synchronous match path utility, `createMatchPathAsync` and `matchFromAbsolutePathsAsync` from an asynchronous match path utility, `register` for some registration logic, and `loadConfig` for configuration loading logic. These functions are from their respective module files within the same directory or project structure.

Here is a possible rewritten version of the code:

```javascript
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

// Import and re-export match path functions from the synchronous match path module
var matchPathSync = require("./match-path-sync");
exports.createMatchPath = matchPathSync.createMatchPath;
exports.matchFromAbsolutePaths = matchPathSync.matchFromAbsolutePaths;

// Import and re-export match path functions from the asynchronous match path module
var matchPathAsync = require("./match-path-async");
exports.createMatchPathAsync = matchPathAsync.createMatchPathAsync;
exports.matchFromAbsolutePathsAsync = matchPathAsync.matchFromAbsolutePathsAsync;

// Import and re-export the register function
var register = require("./register");
exports.register = register.register;

// Import and re-export the configuration loader function
var configLoader = require("./config-loader");
exports.loadConfig = configLoader.loadConfig;
```