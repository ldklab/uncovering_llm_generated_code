The provided Node.js code is a utility function designed to check if a given value is a number object. Here's a step-by-step breakdown of its functionality:

1. `numToStr` is a reference to the `toString` method from `Number.prototype`.

2. `tryNumberObject` is a function that attempts to call the `toString` method on a given value. If the method call is successful, meaning the value is a valid number-like object, the function returns `true`. If an error is thrown (indicating it's not a number-like object), it returns `false`.

3. `toStr` is a reference to the `toString` method from `Object.prototype`.

4. `numClass` is a string representing the class of a number object, `[object Number]`, as determined by the `Object.prototype.toString` method.

5. The `hasToStringTag` variable is set by requiring and executing the `has-tostringtag/shams` module, which checks if the environment supports the ToStringTag symbol (`Symbol.toStringTag` used in ES6 to determine the internal class of objects more reliably).

6. The function `isNumberObject`, exported as a module, checks if a value is a number object:
   - It first checks if the value is of type `number` and returns `true` if so.
   - Then, it checks if the value is an `object`. If not, it returns `false`.
   - If the environment supports `Symbol.toStringTag`, it uses `tryNumberObject` to determine if the value is a number object.
   - If `Symbol.toStringTag` is not supported, it checks if the object's string representation matches `[object Number]`.

Here is the rewritten code with the same logic:

```javascript
'use strict';

const numToStr = Number.prototype.toString;

const tryNumberObject = (value) => {
  try {
    numToStr.call(value);
    return true;
  } catch (e) {
    return false;
  }
};

const toStr = Object.prototype.toString;
const numClass = '[object Number]';
const hasToStringTag = require('has-tostringtag/shams')();

function isNumberObject(value) {
  if (typeof value === 'number') {
    return true;
  }
  if (typeof value !== 'object') {
    return false;
  }
  return hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;
}

module.exports = isNumberObject;
```