The given Node.js code is a module exporting an enhanced version of the file system functionality. It incorporates APIs and utilities for various file system operations such as copying, moving, and ensuring directories and files, along with handling JSON files and checking if paths exist. The core functionality is extended by importing additional modules and spreading their exports into the main export object.

Moreover, it adds a special 'promises' property to the export object, which lazily accesses `fs.promises` from the Node.js native `fs` module to prevent triggering an `ExperimentalWarning` prematurely.

Here's the rewritten code:

```js
'use strict'

const fs = require('fs')
const fsUtils = {
  // Collect and combine all utilities from different modules.
  ...require('./fs'),
  ...require('./copy-sync'),
  ...require('./copy'),
  ...require('./empty'),
  ...require('./ensure'),
  ...require('./json'),
  ...require('./mkdirs'),
  ...require('./move-sync'),
  ...require('./move'),
  ...require('./output'),
  ...require('./path-exists'),
  ...require('./remove'),
}

// Define the 'promises' property dynamically to avoid premature ExperimentalWarning.
if (Object.getOwnPropertyDescriptor(fs, 'promises')) {
  Object.defineProperty(fsUtils, 'promises', {
    get () {
      return fs.promises
    }
  })
}

module.exports = fsUtils
```