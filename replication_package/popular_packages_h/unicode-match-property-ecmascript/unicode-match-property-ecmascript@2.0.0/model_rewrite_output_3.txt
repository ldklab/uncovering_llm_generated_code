The provided Node.js code defines a function `matchProperty` which is responsible for handling Unicode property names. 

### Explanation of its functionality:
- The code imports two modules: `unicode-canonical-property-names-ecmascript` and `unicode-property-aliases-ecmascript`. These modules provide sets and mappings related to Unicode property names.
- The `matchProperty` function takes a `property` string as an argument.
- The function first checks if the provided `property` is already a canonical property name by seeing if it exists within the `canonicalProperties` set. If it is, the function returns the property itself.
- If the `property` is not a canonical name, the function then checks if it exists as an alias in the `propertyAliases` map. If it does exist as a key in this map, the function returns its mapped canonical name.
- If the `property` is neither a canonical name nor a known alias, the function throws an error indicating that the property is unknown.
- The `matchProperty` function is then exported from the module for use in other parts of an application.

Here is a possible rewrite of the Node.js code:

```javascript
'use strict';

const canonicalProperties = require('unicode-canonical-property-names-ecmascript');
const propertyAliases = require('unicode-property-aliases-ecmascript');

function matchProperty(property) {
    if (canonicalProperties.has(property)) {
        return property;
    }
    const alias = propertyAliases.get(property);
    if (alias) {
        return alias;
    }
    throw new Error(`Unknown property: ${property}`);
}

module.exports = matchProperty;
```