The provided Node.js code defines a module that exports a function named `matchProperty`. This function is used to validate and canonicalize Unicode property names. It utilizes two packages:

1. `unicode-canonical-property-names-ecmascript`: This package provides a set of officially recognized Unicode property names.
2. `unicode-property-aliases-ecmascript`: This package provides a mapping of Unicode property aliases to their canonical names.

The `matchProperty` function works as follows:
- It takes a property name as an argument.
- It first checks if the given property name is within the set of canonical property names. If it is, the function returns the property name as-is.
- If the property is not canonical, it checks if the property is an alias (using the aliases map). If it finds a match, it returns the canonical property name corresponding to the alias.
- If the property is neither canonical nor an alias, it throws an error indicating that the property is unknown.

Here's a possible rewrite of the Node.js code:

```javascript
'use strict';

const canonicalProperties = require('unicode-canonical-property-names-ecmascript');
const propertyAliases = require('unicode-property-aliases-ecmascript');

function matchProperty(property) {
    if (canonicalProperties.has(property)) {
        return property;
    } else if (propertyAliases.has(property)) {
        return propertyAliases.get(property);
    } else {
        throw new Error(`Unknown property: ${property}`);
    }
}

module.exports = matchProperty;
```