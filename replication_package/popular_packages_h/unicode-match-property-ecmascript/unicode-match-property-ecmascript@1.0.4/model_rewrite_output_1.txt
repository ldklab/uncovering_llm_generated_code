The provided Node.js code is a module that exports a function `matchProperty`. This function takes a Unicode property name as a parameter and checks whether it is a valid Unicode canonical property name. It uses two dependencies: `unicode-canonical-property-names-ecmascript` and `unicode-property-aliases-ecmascript`.

1. If the input property is already a canonical Unicode property (checked via `canonicalProperties`), it returns the property.
2. If the property is an alias (found in `propertyAliases`), it returns the canonical property name that corresponds to this alias.
3. If the property is neither a canonical name nor a recognized alias, it throws an error indicating that the property is unknown.

Here's a possible rewrite of the Node.js code following the explained functionality:

```javascript
'use strict';

const canonicalPropertyNames = require('unicode-canonical-property-names-ecmascript');
const propertyNameAliases = require('unicode-property-aliases-ecmascript');

function findCanonicalProperty(property) {
	if (canonicalPropertyNames.has(property)) {
		return property;
	}
	if (propertyNameAliases.has(property)) {
		return propertyNameAliases.get(property);
	}
	throw new Error(`Unknown property: ${ property }`);
}

module.exports = findCanonicalProperty;
```