The original Node.js code defines a module that provides functionality for word-wrapping text within a specified column width. The code includes two main features: soft wrapping and hard wrapping. 

1. **Soft Wrapping:** Breaks lines at whitespace without breaking words mid-way. When a line exceeds the specified width (`stop`), it moves to the next line, maintaining whole words.
  
2. **Hard Wrapping:** Breaks lines strictly at the specified width, regardless of word boundaries. When a line length exceeds the specified width, it divides the line exactly at the width limit, potentially splitting words. 

The function can be configured through various parameter combinations to facilitate word wrapping. The parameters `start` and `stop` define the column positions, and an optional `mode` parameter determines the wrapping style ('soft' or 'hard').

Here is a possible rewrite of this Node.js code:

```javascript
class WordWrap {
    constructor(start, stop, params = {}) {
        if (typeof start === 'object') {
            ({ start, stop, ...params } = start);
        } else if (typeof stop === 'object') {
            params = stop;
            stop = undefined;
        }
        
        this.start = start || 0;
        this.stop = stop || start || 0;
        this.mode = params.mode || 'soft';
        this.re = this.mode === 'hard' ? /\b/ : /(\S+\s+)/;
    }

    wrap(text) {
        const chunks = text.toString()
            .split(this.re)
            .reduce((acc, chunk) => {
                if (this.mode === 'hard') {
                    for (let i = 0; i < chunk.length; i += this.stop - this.start) {
                        acc.push(chunk.slice(i, i + this.stop - this.start));
                    }
                } else {
                    acc.push(chunk);
                }
                return acc;
            }, []);
        
        return chunks.reduce((lines, rawChunk) => {
            if (rawChunk === '') return lines;
            
            const chunk = rawChunk.replace(/\t/g, '    ');
            const lastLineIndex = lines.length - 1;
            
            if (lines[lastLineIndex].length + chunk.length > this.stop) {
                lines[lastLineIndex] = lines[lastLineIndex].replace(/\s+$/, '');
                
                chunk.split(/\n/).forEach(part => {
                    lines.push(' '.repeat(this.start) + part.trimStart());
                });
            } else if (chunk.includes('\n')) {
                const splitChunks = chunk.split(/\n/);
                lines[lastLineIndex] += splitChunks.shift();
                splitChunks.forEach(part => {
                    lines.push(' '.repeat(this.start) + part.trimStart());
                });
            } else {
                lines[lastLineIndex] += chunk;
            }
            return lines;
        }, [' '.repeat(this.start)]).join('\n');
    }
}

const wordwrap = (start, stop, params) => new WordWrap(start, stop, params).wrap.bind(new WordWrap(start, stop, params));

wordwrap.soft = wordwrap;

wordwrap.hard = (start, stop) => new WordWrap(start, stop, { mode: 'hard' }).wrap.bind(new WordWrap(start, stop, { mode: 'hard' }));

module.exports = wordwrap;
```