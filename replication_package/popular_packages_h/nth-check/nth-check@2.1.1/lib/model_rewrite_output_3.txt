The original Node.js code provides functionality for working with mathematical formulas, specifically those related to sequences. It exports four main functions: `parse`, `compile`, `generate`, and `sequence`. Here's a breakdown of what each function does:

1. **parse**: This is imported from a module `parse.js`. It is used to parse a formula into a form that can be used for further computations. 

2. **compile**: Also imported, this is used to take the parsed formula and compile it into an optimized function. This function evaluates whether a given index matches the parsed formula.

3. **generate**: Imported like the others, this function creates a generator function from the parsed formula, which can produce a sequence of numbers based on the specified formula.

4. **sequence**: This is a local function that utilizes the `generate` function to yield a sequence of indices based on a provided formula.

The exported functions enable users to parse, compile, and generate sequences from mathematical formulas, particularly those using the nth-number format (e.g., `2n+3`). The primary function `nthCheck` combines parsing and compiling a formula, returning a function that checks if a certain index matches the criteria described by the formula.

Here is the rewritten code with the same functionality:

```javascript
"use strict";

// Import parse function from parse.js
import { parse as parseFormula } from "./parse.js";

// Import compile and generate functions from compile.js
import { compile as compileFormula, generate as generateSequence } from "./compile.js";

// Export the parse function
export { parseFormula as parse };

// Export the compile and generate functions
export { compileFormula as compile, generateSequence as generate };

/**
 * Parses and compiles a formula to a highly optimized function.
 * Combination of parse and compile.
 *
 * @param formula The formula to compile.
 * @returns A function that evaluates whether a given index matches the formula.
 */
function nthCheck(formula) {
    return compileFormula(parseFormula(formula));
}

export default nthCheck;

/**
 * Parses and compiles a formula to a generator that produces a sequence of indices.
 * Combination of parse and generate.
 *
 * @param formula The formula to compile.
 * @returns A generator function that produces a sequence of indices.
 */
export function sequence(formula) {
    return generateSequence(parseFormula(formula));
}
```

This revised version imports and exports the necessary functions in a more streamlined way using ES module syntax and provides the same functional capabilities as the original code.